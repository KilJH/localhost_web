{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/client/components/main/hoc/withAuth.tsx\";\nimport axios from 'axios';\nimport React from 'react';\nimport SERVER from '../../../utils/url';\nimport { useAsync } from 'react-async';\nimport Loading from '../../reuse/Loading'; // isLogined\n// 0: 아무나 볼 수 있음, 1: 로그인한 회원만 볼 수 있음, 2: 게스트만 볼 수 있음\n// grade\n// 0: 아무나 볼 수 있음, 2: 호스트회원만 볼 수 있음, 3: 관리자회원만 볼 수 있음\n\nconst getAuth = async () => {\n  const res = await axios.get(`${SERVER}/api/auth/check`, {\n    withCredentials: true\n  });\n  return res.data;\n};\n\nconst withAuth = (isLogined, grade) => Component => {\n  return () => {\n    const {\n      data,\n      isLoading,\n      error\n    } = useAsync({\n      promiseFn: getAuth\n    });\n    if (isLoading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"\\uC5D0\\uB7EC!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this);\n    if (!data) return null;\n    const user = data.user;\n\n    if (data.success) {\n      console.log('로그인되어있습니다.');\n\n      if (isLogined === 2) {\n        alert('이미 로그인되어있습니다.');\n        location.href = '/';\n        return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 12\n        }, this);\n      }\n\n      switch (grade) {\n        // 아무나\n        case 0:\n          return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this);\n        // 호스트\n\n        case 1:\n          if (user.isHost) return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 30\n          }, this);\n          alert('접근할 수 없는 페이지 입니다.');\n          location.href = '/';\n        // 관리자\n\n        case 2:\n          if (user.isAdmin) return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 31\n          }, this);\n          alert('접근할 수 없는 페이지 입니다.');\n          location.href = '/';\n      }\n    } else {\n      // 로그인되지않음\n      console.log('로그인을 해주세요.');\n\n      if (isLogined === 1) {\n        alert('로그인을 해주세요.');\n        location.href = '/login';\n      } else {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 12\n        }, this);\n      }\n    }\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  };\n};\n\nexport default withAuth;","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/client/components/main/hoc/withAuth.tsx"],"names":["axios","React","SERVER","useAsync","Loading","getAuth","res","get","withCredentials","data","withAuth","isLogined","grade","Component","isLoading","error","promiseFn","user","success","console","log","alert","location","href","isHost","isAdmin"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAGA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CAEA;AACA;AAEA;AACA;;AAEA,MAAMC,OAAO,GAAG,YAAY;AAC3B,QAAMC,GAAG,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAW,GAAEL,MAAO,iBAApB,EAAsC;AACvDM,IAAAA,eAAe,EAAE;AADsC,GAAtC,CAAlB;AAIA,SAAOF,GAAG,CAACG,IAAX;AACA,CAND;;AAQA,MAAMC,QAAQ,GAAG,CAACC,SAAD,EAAoBC,KAApB,KAChBC,SADsD,IAElD;AACJ,SAAO,MAAM;AACZ,UAAM;AAAEJ,MAAAA,IAAF;AAAQK,MAAAA,SAAR;AAAmBC,MAAAA;AAAnB,QAA6BZ,QAAQ,CAAC;AAC3Ca,MAAAA,SAAS,EAAEX;AADgC,KAAD,CAA3C;AAIA,QAAIS,SAAJ,EAAe,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAP;AACf,QAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACX,QAAI,CAACN,IAAL,EAAW,OAAO,IAAP;AAEX,UAAMQ,IAAU,GAAGR,IAAI,CAACQ,IAAxB;;AACA,QAAIR,IAAI,CAACS,OAAT,EAAkB;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,UAAIT,SAAS,KAAK,CAAlB,EAAqB;AACpBU,QAAAA,KAAK,CAAC,eAAD,CAAL;AACAC,QAAAA,QAAQ,CAACC,IAAT,GAAgB,GAAhB;AACA,4BAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;;AACD,cAAQX,KAAR;AACC;AACA,aAAK,CAAL;AACC,8BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AACA,aAAK,CAAL;AACC,cAAIK,IAAI,CAACO,MAAT,EAAiB,oBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAAP;AACjBH,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACAC,UAAAA,QAAQ,CAACC,IAAT,GAAgB,GAAhB;AACD;;AACA,aAAK,CAAL;AACC,cAAIN,IAAI,CAACQ,OAAT,EAAkB,oBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,kBAAP;AAClBJ,UAAAA,KAAK,CAAC,mBAAD,CAAL;AACAC,UAAAA,QAAQ,CAACC,IAAT,GAAgB,GAAhB;AAbF;AAeA,KAtBD,MAsBO;AACN;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AAEA,UAAIT,SAAS,KAAK,CAAlB,EAAqB;AACpBU,QAAAA,KAAK,CAAC,YAAD,CAAL;AACAC,QAAAA,QAAQ,CAACC,IAAT,GAAgB,QAAhB;AACA,OAHD,MAGO;AACN,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACA;AACD;;AAED,wBAAO,qCAAP;AACA,GA7CD;AA8CA,CAjDD;;AAmDA,eAAeb,QAAf","sourcesContent":["import axios from 'axios';\nimport React, { ReactNode } from 'react';\nimport SERVER from '../../../utils/url';\nimport Router from 'next/router';\nimport { User } from '../../../interfaces';\nimport { useAsync } from 'react-async';\nimport Loading from '../../reuse/Loading';\n\n// isLogined\n// 0: 아무나 볼 수 있음, 1: 로그인한 회원만 볼 수 있음, 2: 게스트만 볼 수 있음\n\n// grade\n// 0: 아무나 볼 수 있음, 2: 호스트회원만 볼 수 있음, 3: 관리자회원만 볼 수 있음\n\nconst getAuth = async () => {\n\tconst res = await axios.get(`${SERVER}/api/auth/check`, {\n\t\twithCredentials: true,\n\t});\n\n\treturn res.data;\n};\n\nconst withAuth = (isLogined: number, grade: number) => (\n\tComponent: React.ComponentType<any>,\n) => {\n\treturn () => {\n\t\tconst { data, isLoading, error } = useAsync({\n\t\t\tpromiseFn: getAuth,\n\t\t});\n\n\t\tif (isLoading) return <Loading />;\n\t\tif (error) return <div>에러!</div>;\n\t\tif (!data) return null;\n\n\t\tconst user: User = data.user;\n\t\tif (data.success) {\n\t\t\tconsole.log('로그인되어있습니다.');\n\t\t\tif (isLogined === 2) {\n\t\t\t\talert('이미 로그인되어있습니다.');\n\t\t\t\tlocation.href = '/';\n\t\t\t\treturn <Loading />;\n\t\t\t}\n\t\t\tswitch (grade) {\n\t\t\t\t// 아무나\n\t\t\t\tcase 0:\n\t\t\t\t\treturn <Component />;\n\t\t\t\t// 호스트\n\t\t\t\tcase 1:\n\t\t\t\t\tif (user.isHost) return <Component />;\n\t\t\t\t\talert('접근할 수 없는 페이지 입니다.');\n\t\t\t\t\tlocation.href = '/';\n\t\t\t\t// 관리자\n\t\t\t\tcase 2:\n\t\t\t\t\tif (user.isAdmin) return <Component />;\n\t\t\t\t\talert('접근할 수 없는 페이지 입니다.');\n\t\t\t\t\tlocation.href = '/';\n\t\t\t}\n\t\t} else {\n\t\t\t// 로그인되지않음\n\t\t\tconsole.log('로그인을 해주세요.');\n\n\t\t\tif (isLogined === 1) {\n\t\t\t\talert('로그인을 해주세요.');\n\t\t\t\tlocation.href = '/login';\n\t\t\t} else {\n\t\t\t\treturn <Component />;\n\t\t\t}\n\t\t}\n\n\t\treturn <></>;\n\t};\n};\n\nexport default withAuth;\n"]},"metadata":{},"sourceType":"module"}