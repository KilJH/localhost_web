{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport axios from 'axios';\nimport React from 'react';\nimport SERVER from '../../../utils/url';\nimport { useAsync } from 'react-async';\nimport Loading from '../../reuse/Loading'; // isLogined\n// 0: 아무나 볼 수 있음, 1: 로그인한 회원만 볼 수 있음, 2: 게스트만 볼 수 있음\n// grade\n// 0: 아무나 볼 수 있음, 2: 호스트회원만 볼 수 있음, 3: 관리자회원만 볼 수 있음\n\nconst getAuth = async () => {\n  const res = await axios.get(`${SERVER}/api/auth/check`, {\n    withCredentials: true\n  });\n  return res.data;\n};\n\nconst withAuth = (isLogined, grade) => Component => {\n  return () => {\n    const {\n      data,\n      isLoading,\n      error\n    } = useAsync({\n      promiseFn: getAuth\n    });\n    if (isLoading) return /*#__PURE__*/_jsx(Loading, {});\n    if (error) return /*#__PURE__*/_jsx(\"div\", {\n      children: \"\\uC5D0\\uB7EC!\"\n    });\n    if (!data) return null;\n    const user = data.user;\n\n    if (data.success) {\n      console.log('로그인되어있습니다.');\n\n      if (isLogined === 2) {\n        alert('이미 로그인되어있습니다.');\n        location.href = '/';\n        return /*#__PURE__*/_jsx(Loading, {});\n      }\n\n      switch (grade) {\n        // 아무나\n        case 0:\n          return /*#__PURE__*/_jsx(Component, {});\n        // 호스트\n\n        case 1:\n          if (user.isHost) return /*#__PURE__*/_jsx(Component, {});\n          alert('권한이 없습니다. 호스트 신청을 해주세요:D');\n          location.href = '/';\n          break;\n        // 관리자\n\n        case 2:\n          if (user.isAdmin) return /*#__PURE__*/_jsx(Component, {});\n          alert('접근할 수 없는 페이지 입니다.');\n          location.href = '/';\n          break;\n      }\n    } else {\n      // 로그인되지않음\n      console.log('로그인을 해주세요.');\n\n      if (isLogined === 1) {\n        alert('로그인을 해주세요.');\n        location.href = '/login';\n      } else {\n        return /*#__PURE__*/_jsx(Component, {});\n      }\n    }\n\n    return /*#__PURE__*/_jsx(Loading, {});\n  };\n};\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}