{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport React, { useContext, useState } from 'react';\nimport styled from 'styled-components';\nimport { UserStateContext } from '../../../context/user';\nimport SERVER from '../../../utils/url';\nvar WriterContainer = styled.div.withConfig({\n  displayName: \"CommentWrite__WriterContainer\",\n  componentId: \"rtwbik-0\"\n})([\"margin:1rem 0 0.5rem 0;position:relative;& textarea{width:100%;display:block;resize:none;height:8em;border-radius:0.25rem;transition:all 0.2s ease;&:focus{outline:none;border:1px solid rgba(0,0,0,0);box-shadow:0px 0px 0px 2px #5197d5;}}& button[type='submit']{background-color:#5197d5;color:white;border:none;position:absolute;right:0.25rem;bottom:0.5rem;width:4em;transition:all 0.2s ease;&:hover{background-color:rgb(67,82,175);}}\"]);\n\nvar CommentWrite = function CommentWrite(props) {\n  var _useState = useState(''),\n      comment = _useState[0],\n      setComment = _useState[1];\n\n  var currentUser = useContext(UserStateContext);\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              e.preventDefault();\n              _context.next = 3;\n              return axios.post(\"\".concat(SERVER, \"/api/board/comment\"), {\n                id: props.boardId,\n                userId: currentUser.id,\n                description: comment\n              });\n\n            case 3:\n              res = _context.sent;\n\n              if (res.data.success) {\n                props.setComments([].concat(_toConsumableArray(props.comments), [{\n                  user: currentUser,\n                  description: comment,\n                  createTime: '방금 전'\n                }]));\n                setComment('');\n              } else alert(res.data.message);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsx(WriterContainer, {\n    onSubmit: onSubmit,\n    children: /*#__PURE__*/_jsxs(\"form\", {\n      children: [/*#__PURE__*/_jsx(\"textarea\", {\n        value: comment,\n        onChange: function onChange(e) {\n          setComment(e.target.value);\n        }\n      }), /*#__PURE__*/_jsx(\"button\", {\n        type: \"submit\",\n        children: \"\\uC791\\uC131\"\n      })]\n    })\n  });\n};\n\nexport default CommentWrite;","map":null,"metadata":{},"sourceType":"module"}