{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport axios from 'axios';\nimport React from 'react';\nimport SERVER from '../../../utils/url';\nimport Router from 'next/router';\n\n// isLogined\n// 0: 아무나 볼 수 있음, 1: 로그인한 회원만 볼 수 있음, 2: 게스트만 볼 수 있음\n// grade\n// 0: 아무나 볼 수 있음, 2: 호스트회원만 볼 수 있음, 3: 관리자회원만 볼 수 있음\nconst withAuth = (isLogined, grade) => Component => {\n  axios.get(`${SERVER}/api/auth/check`, {\n    withCredentials: true\n  }).then(res => {\n    const user = res.data.user;\n\n    if (res.data.success) {\n      console.log('로그인되어있습니다.');\n\n      if (isLogined === 2) {\n        alert('이미 로그인되어있습니다.');\n        Router.push('/');\n      }\n\n      switch (grade) {\n        // 아무나\n        case 0:\n          return Component;\n        // 호스트\n\n        case 1:\n          if (user.isHost) return Component;\n          alert('접근할 수 없는 페이지 입니다.');\n          Router.push('/');\n        // 관리자\n\n        case 2:\n          if (user.isAdmin) return Component;\n          alert('접근할 수 없는 페이지 입니다.');\n          Router.push('/');\n      }\n    } else {\n      // 로그인되지않음\n      console.log('로그인을 해주세요.');\n      console.log(res.data.message, '이것은 에러');\n\n      if (isLogined === 1) {\n        Router.push('/login');\n      } else {\n        return Component;\n      }\n    }\n  });\n  return () => /*#__PURE__*/_jsx(_Fragment, {});\n};\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}