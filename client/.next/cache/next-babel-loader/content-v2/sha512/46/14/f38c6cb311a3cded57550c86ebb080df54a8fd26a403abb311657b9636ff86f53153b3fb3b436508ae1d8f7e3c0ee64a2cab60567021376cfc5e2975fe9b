{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hby84\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\210428\\\\localhost_web\\\\client\\\\components\\\\reuse\\\\LanguageSelect.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Checkbox } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { languages } from '../../utils/basicData';\nimport LanguageTag from './LanguageTag';\n\nconst topToBtm = (x, y) => keyframes([\"from{height:\", \"rem;padding-top:\", \";padding-bottom:\", \";}to{height:\", \"rem;padding-top:\", \";padding-bottom:\", \";}\"], x, x === 0 ? 0 : '1rem', x === 0 ? 0 : '1rem', y, y === 0 ? 0 : '1rem', y === 0 ? 0 : '1rem');\n\nconst Selected = styled.div.withConfig({\n  displayName: \"LanguageSelect__Selected\",\n  componentId: \"sc-1j8t0t6-0\"\n})([\"border-bottom:1px solid rgba(0,0,0,0.42);height:2.5rem;padding:0.25rem 0.5rem;box-sizing:border-box;cursor:pointer;transition:all 0.2s ease;display:flex;align-items:center;&:hover{border-width:2px;border-color:rgba(0,0,0,0.87);}&:focus{border-width:2px;border-color:rgb(58,75,170);}&::after{content:'\\u25BC';width:1rem;height:1rem;text-align:center;&:hover{border-radius:50%;background:rgba(0,0,0,0.6);}}& .selectedLanguages{flex:1;white-space:nowrap;overflow-x:hidden;}\"]);\nconst LanguageSelectList = styled.div.withConfig({\n  displayName: \"LanguageSelect__LanguageSelectList\",\n  componentId: \"sc-1j8t0t6-1\"\n})([\"position:absolute;background:white;padding:1rem;padding-left:0.5rem;box-shadow:0px 2px 4px rgba(0,0,0,0.2);z-index:2;width:9rem;box-sizing:border-box;overflow-y:auto;animation:\", \" 0.5s ease forwards;& label{display:flex;align-items:center;cursor:pointer;}\"], props => props.open ? topToBtm(0, 20) : topToBtm(20, 0));\nconst StyledCheckbox = styled(Checkbox).withConfig({\n  displayName: \"LanguageSelect__StyledCheckbox\",\n  componentId: \"sc-1j8t0t6-2\"\n})([\"color:#5197d5;\"]);\n\nconst LanguageSelect = props => {\n  const {\n    onChange\n  } = props; // check 상태 초기화를 위한 맵핑\n\n  let mappedChecks = {};\n  languages.forEach(lang => {\n    mappedChecks = _objectSpread(_objectSpread({}, mappedChecks), {}, {\n      [lang.id]: false\n    });\n  });\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n  const {\n    0: checkState,\n    1: setCheckState\n  } = useState(mappedChecks);\n  const {\n    0: checkedLangs,\n    1: setCheckedLangs\n  } = useState([]);\n  useEffect(() => {\n    const langs = languages.filter(lang => {\n      return checkState[lang.id];\n    }).map(lang => lang.name);\n    setCheckedLangs(langs);\n  }, [checkState]);\n  useEffect(() => {\n    onChange(checkedLangs);\n  }, [checkedLangs]);\n\n  const onOpen = () => {\n    setOpen(!open);\n  };\n\n  const onClose = () => {\n    setOpen(false);\n  };\n\n  const onCheck = id => {\n    setCheckState(_objectSpread(_objectSpread({}, checkState), {}, {\n      [id]: !checkState[id]\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'relative',\n        top: '1rem'\n      },\n      children: /*#__PURE__*/_jsxDEV(LanguageSelectList, {\n        open: open,\n        children: languages.map(lang => /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(StyledCheckbox, {\n            color: \"primary\",\n            checked: checkState[lang.id],\n            onChange: () => onCheck(lang.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 8\n          }, this), lang.name]\n        }, lang.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 7\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Selected, {\n      onClick: onOpen,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selectedLanguages\",\n        children: checkedLangs.length ? checkedLangs.map(lang => /*#__PURE__*/_jsxDEV(LanguageTag, {\n          language: lang\n        }, lang, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 32\n        }, this)) : /*#__PURE__*/_jsxDEV(LanguageTag, {\n          language: \"\\uC804\\uCCB4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\nexport default LanguageSelect;","map":{"version":3,"sources":["C:/Users/hby84/OneDrive/바탕 화면/210428/localhost_web/client/components/reuse/LanguageSelect.tsx"],"names":["Checkbox","React","useEffect","useState","styled","keyframes","languages","LanguageTag","topToBtm","x","y","Selected","div","LanguageSelectList","props","open","StyledCheckbox","LanguageSelect","onChange","mappedChecks","forEach","lang","id","setOpen","checkState","setCheckState","checkedLangs","setCheckedLangs","langs","filter","map","name","onOpen","onClose","onCheck","position","top","length"],"mappings":"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","sourcesContent":["import { Checkbox } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\nimport { languages } from '../../utils/basicData';\r\nimport LanguageTag from './LanguageTag';\r\n\r\ninterface Props {\r\n\tonChange: Function;\r\n}\r\n\r\nconst topToBtm = (x: number, y: number) => keyframes`\r\n  from{\r\n    height: ${x}rem;\r\n    padding-top: ${x === 0 ? 0 : '1rem'};\r\n    padding-bottom: ${x === 0 ? 0 : '1rem'};\r\n  }\r\n  to{\r\n    height: ${y}rem;\r\n    padding-top: ${y === 0 ? 0 : '1rem'};\r\n    padding-bottom: ${y === 0 ? 0 : '1rem'};\r\n  }\r\n`;\r\n\r\nconst Selected = styled.div`\r\n\tborder-bottom: 1px solid rgba(0, 0, 0, 0.42);\r\n\theight: 2.5rem;\r\n\tpadding: 0.25rem 0.5rem;\r\n\tbox-sizing: border-box;\r\n\tcursor: pointer;\r\n\ttransition: all 0.2s ease;\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\t&:hover {\r\n\t\tborder-width: 2px;\r\n\t\tborder-color: rgba(0, 0, 0, 0.87);\r\n\t}\r\n\t&:focus {\r\n\t\tborder-width: 2px;\r\n\t\tborder-color: rgb(58, 75, 170);\r\n\t}\r\n\t&::after {\r\n\t\tcontent: '▼';\r\n\t\twidth: 1rem;\r\n\t\theight: 1rem;\r\n\t\ttext-align: center;\r\n\t\t&:hover {\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tbackground: rgba(0, 0, 0, 0.6);\r\n\t\t}\r\n\t}\r\n\r\n\t& .selectedLanguages {\r\n\t\tflex: 1;\r\n\t\twhite-space: nowrap;\r\n\t\toverflow-x: hidden;\r\n\t}\r\n`;\r\n\r\nconst LanguageSelectList = styled.div<{ open: boolean }>`\r\n\tposition: absolute;\r\n\tbackground: white;\r\n\tpadding: 1rem;\r\n\tpadding-left: 0.5rem;\r\n\tbox-shadow: 0px 2px 4px rgba(0, 0, 0, 0.2);\r\n\tz-index: 2;\r\n\twidth: 9rem;\r\n\t/* height: 20rem; */\r\n\tbox-sizing: border-box;\r\n\toverflow-y: auto;\r\n\r\n\tanimation: ${props => (props.open ? topToBtm(0, 20) : topToBtm(20, 0))} 0.5s\r\n\t\tease forwards;\r\n\r\n\t& label {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tcursor: pointer;\r\n\t}\r\n`;\r\n\r\nconst StyledCheckbox = styled(Checkbox)`\r\n\tcolor: #5197d5;\r\n`;\r\n\r\nconst LanguageSelect = (props: Props) => {\r\n\tconst { onChange } = props;\r\n\r\n\t// check 상태 초기화를 위한 맵핑\r\n\tlet mappedChecks = {};\r\n\tlanguages.forEach(lang => {\r\n\t\tmappedChecks = { ...mappedChecks, [lang.id]: false };\r\n\t});\r\n\r\n\tconst [open, setOpen] = useState(false);\r\n\tconst [checkState, setCheckState] = useState(mappedChecks);\r\n\tconst [checkedLangs, setCheckedLangs] = useState([]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst langs = languages\r\n\t\t\t.filter(lang => {\r\n\t\t\t\treturn checkState[lang.id];\r\n\t\t\t})\r\n\t\t\t.map(lang => lang.name);\r\n\t\tsetCheckedLangs(langs);\r\n\t}, [checkState]);\r\n\r\n\tuseEffect(() => {\r\n\t\tonChange(checkedLangs);\r\n\t}, [checkedLangs]);\r\n\r\n\tconst onOpen = () => {\r\n\t\tsetOpen(!open);\r\n\t};\r\n\tconst onClose = () => {\r\n\t\tsetOpen(false);\r\n\t};\r\n\tconst onCheck = (id: number) => {\r\n\t\tsetCheckState({ ...checkState, [id]: !checkState[id] });\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div style={{ position: 'relative', top: '1rem' }}>\r\n\t\t\t\t<LanguageSelectList open={open}>\r\n\t\t\t\t\t{languages.map(lang => (\r\n\t\t\t\t\t\t<label key={lang.id}>\r\n\t\t\t\t\t\t\t<StyledCheckbox\r\n\t\t\t\t\t\t\t\tcolor='primary'\r\n\t\t\t\t\t\t\t\tchecked={checkState[lang.id]}\r\n\t\t\t\t\t\t\t\tonChange={() => onCheck(lang.id)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{lang.name}\r\n\t\t\t\t\t\t</label>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</LanguageSelectList>\r\n\t\t\t</div>\r\n\t\t\t<Selected onClick={onOpen}>\r\n\t\t\t\t<div className='selectedLanguages'>\r\n\t\t\t\t\t{checkedLangs.length ? (\r\n\t\t\t\t\t\tcheckedLangs.map(lang => <LanguageTag language={lang} key={lang} />)\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<LanguageTag language='전체' />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t</Selected>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default LanguageSelect;\r\n"]},"metadata":{},"sourceType":"module"}