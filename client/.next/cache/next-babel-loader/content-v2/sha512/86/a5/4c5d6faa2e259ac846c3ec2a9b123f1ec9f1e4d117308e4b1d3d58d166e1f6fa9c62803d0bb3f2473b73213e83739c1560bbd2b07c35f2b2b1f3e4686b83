{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/client/components/main/hoc/withAuth.tsx\",\n    _this = this;\n\nimport axios from 'axios';\nimport React from 'react';\nimport SERVER from '../../../utils/url';\nimport { useAsync } from 'react-async'; // isLogined\n// 0: 아무나 볼 수 있음, 1: 로그인한 회원만 볼 수 있음, 2: 게스트만 볼 수 있음\n// grade\n// 0: 아무나 볼 수 있음, 2: 호스트회원만 볼 수 있음, 3: 관리자회원만 볼 수 있음\n\nvar getAuth = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(SERVER, \"/api/auth/check\"), {\n              withCredentials: true\n            });\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAuth() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar withAuth = function withAuth(isLogined, grade) {\n  return function (Component) {\n    var _s = $RefreshSig$();\n\n    return _s(function () {\n      _s();\n\n      var _useAsync = useAsync({\n        promiseFn: getAuth\n      }),\n          data = _useAsync.data,\n          isLoading = _useAsync.isLoading,\n          error = _useAsync.error;\n\n      if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB85C\\uB529\\uC911...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }, _this);\n      if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uC5D0\\uB7EC!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, _this);\n      if (!data) return null;\n      var user = data.user;\n\n      if (data.success) {\n        console.log('로그인되어있습니다.');\n\n        if (isLogined === 2) {\n          alert('이미 로그인되어있습니다.');\n          location.href = '/';\n        }\n\n        switch (grade) {\n          // 아무나\n          case 0:\n            return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }, _this);\n          // 호스트\n\n          case 1:\n            if (user.isHost) return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 30\n            }, _this);\n            alert('접근할 수 없는 페이지 입니다.');\n            location.href = '/';\n          // 관리자\n\n          case 2:\n            if (user.isAdmin) return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 31\n            }, _this);\n            alert('접근할 수 없는 페이지 입니다.');\n            location.href = '/';\n        }\n      } else {\n        // 로그인되지않음\n        console.log('로그인을 해주세요.');\n\n        if (isLogined === 1) {\n          alert('로그인을 해주세요.');\n          location.href = '/login';\n        } else {\n          return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 12\n          }, _this);\n        }\n      }\n\n      return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, _this);\n    }, \"DWInu5ZRLtSFS71MtZ8FtZQJLeg=\", false, function () {\n      return [useAsync];\n    }); // axios\n    // \t.get(`${SERVER}/api/auth/check`, { withCredentials: true })\n    // \t.then(res => {\n    // \t\tconst user: User = res.data.user;\n    // \t\tif (res.data.success) {\n    // \t\t\tconsole.log('로그인되어있습니다.');\n    // \t\t\tif (isLogined === 2) {\n    // \t\t\t\talert('이미 로그인되어있습니다.');\n    // \t\t\t\tlocation.href = '/';\n    // \t\t\t}\n    // \t\t\tswitch (grade) {\n    // \t\t\t\t// 아무나\n    // \t\t\t\tcase 0:\n    // \t\t\t\t\treturn Component;\n    // \t\t\t\t// 호스트\n    // \t\t\t\tcase 1:\n    // \t\t\t\t\tif (user.isHost) return Component;\n    // \t\t\t\t\talert('접근할 수 없는 페이지 입니다.');\n    // \t\t\t\t\tlocation.href = '/';\n    // \t\t\t\t// 관리자\n    // \t\t\t\tcase 2:\n    // \t\t\t\t\tif (user.isAdmin) return Component;\n    // \t\t\t\t\talert('접근할 수 없는 페이지 입니다.');\n    // \t\t\t\t\tlocation.href = '/';\n    // \t\t\t}\n    // \t\t} else {\n    // \t\t\t// 로그인되지않음\n    // \t\t\tconsole.log('로그인을 해주세요.');\n    // \t\t\tconsole.log(res.data.message, '이것은 에러');\n    // \t\t\tif (isLogined === 1) {\n    // \t\t\t\talert('로그인을 해주세요.');\n    // \t\t\t\tlocation.href = '/login';\n    // \t\t\t} else {\n    // \t\t\t\treturn Component;\n    // \t\t\t}\n    // \t\t}\n    // \t});\n    // return Component;\n  };\n};\n\nexport default withAuth;","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/client/components/main/hoc/withAuth.tsx"],"names":["axios","React","SERVER","useAsync","getAuth","get","withCredentials","res","data","withAuth","isLogined","grade","Component","promiseFn","isLoading","error","user","success","console","log","alert","location","href","isHost","isAdmin"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AAGA,SAASC,QAAT,QAAyB,aAAzB,C,CAEA;AACA;AAEA;AACA;;AAEA,IAAMC,OAAO;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACGJ,KAAK,CAACK,GAAN,WAAaH,MAAb,sBAAsC;AACvDI,cAAAA,eAAe,EAAE;AADsC,aAAtC,CADH;;AAAA;AACTC,YAAAA,GADS;AAAA,6CAKRA,GAAG,CAACC,IALI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAPJ,OAAO;AAAA;AAAA;AAAA,GAAb;;AAQA,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAACC,SAAD,EAAoBC,KAApB;AAAA,SAAsC,UACtDC,SADsD,EAElD;AAAA;;AACJ,cAAO,YAAM;AAAA;;AAAA,sBACuBT,QAAQ,CAAC;AAC3CU,QAAAA,SAAS,EAAET;AADgC,OAAD,CAD/B;AAAA,UACJI,IADI,aACJA,IADI;AAAA,UACEM,SADF,aACEA,SADF;AAAA,UACaC,KADb,aACaA,KADb;;AAKZ,UAAID,SAAJ,EAAe,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACf,UAAIC,KAAJ,EAAW,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAP;AACX,UAAI,CAACP,IAAL,EAAW,OAAO,IAAP;AAEX,UAAMQ,IAAU,GAAGR,IAAI,CAACQ,IAAxB;;AACA,UAAIR,IAAI,CAACS,OAAT,EAAkB;AACjBC,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AACA,YAAIT,SAAS,KAAK,CAAlB,EAAqB;AACpBU,UAAAA,KAAK,CAAC,eAAD,CAAL;AACAC,UAAAA,QAAQ,CAACC,IAAT,GAAgB,GAAhB;AACA;;AACD,gBAAQX,KAAR;AACC;AACA,eAAK,CAAL;AACC,gCAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,qBAAP;AACD;;AACA,eAAK,CAAL;AACC,gBAAIK,IAAI,CAACO,MAAT,EAAiB,oBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,qBAAP;AACjBH,YAAAA,KAAK,CAAC,mBAAD,CAAL;AACAC,YAAAA,QAAQ,CAACC,IAAT,GAAgB,GAAhB;AACD;;AACA,eAAK,CAAL;AACC,gBAAIN,IAAI,CAACQ,OAAT,EAAkB,oBAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,qBAAP;AAClBJ,YAAAA,KAAK,CAAC,mBAAD,CAAL;AACAC,YAAAA,QAAQ,CAACC,IAAT,GAAgB,GAAhB;AAbF;AAeA,OArBD,MAqBO;AACN;AACAJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;;AAEA,YAAIT,SAAS,KAAK,CAAlB,EAAqB;AACpBU,UAAAA,KAAK,CAAC,YAAD,CAAL;AACAC,UAAAA,QAAQ,CAACC,IAAT,GAAgB,QAAhB;AACA,SAHD,MAGO;AACN,8BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,mBAAP;AACA;AACD;;AAED,0BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,eAAP;AACA,KA5CD;AAAA,cACoCnB,QADpC;AAAA,OADI,CA+CJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,GAzFgB;AAAA,CAAjB;;AA2FA,eAAeM,QAAf","sourcesContent":["import axios from 'axios';\nimport React, { ReactNode } from 'react';\nimport SERVER from '../../../utils/url';\nimport Router from 'next/router';\nimport { User } from '../../../interfaces';\nimport { useAsync } from 'react-async';\n\n// isLogined\n// 0: 아무나 볼 수 있음, 1: 로그인한 회원만 볼 수 있음, 2: 게스트만 볼 수 있음\n\n// grade\n// 0: 아무나 볼 수 있음, 2: 호스트회원만 볼 수 있음, 3: 관리자회원만 볼 수 있음\n\nconst getAuth = async () => {\n\tconst res = await axios.get(`${SERVER}/api/auth/check`, {\n\t\twithCredentials: true,\n\t});\n\n\treturn res.data;\n};\n\nconst withAuth = (isLogined: number, grade: number) => (\n\tComponent: React.ComponentType<any>,\n) => {\n\treturn () => {\n\t\tconst { data, isLoading, error } = useAsync({\n\t\t\tpromiseFn: getAuth,\n\t\t});\n\n\t\tif (isLoading) return <div>로딩중...</div>;\n\t\tif (error) return <div>에러!</div>;\n\t\tif (!data) return null;\n\n\t\tconst user: User = data.user;\n\t\tif (data.success) {\n\t\t\tconsole.log('로그인되어있습니다.');\n\t\t\tif (isLogined === 2) {\n\t\t\t\talert('이미 로그인되어있습니다.');\n\t\t\t\tlocation.href = '/';\n\t\t\t}\n\t\t\tswitch (grade) {\n\t\t\t\t// 아무나\n\t\t\t\tcase 0:\n\t\t\t\t\treturn <Component />;\n\t\t\t\t// 호스트\n\t\t\t\tcase 1:\n\t\t\t\t\tif (user.isHost) return <Component />;\n\t\t\t\t\talert('접근할 수 없는 페이지 입니다.');\n\t\t\t\t\tlocation.href = '/';\n\t\t\t\t// 관리자\n\t\t\t\tcase 2:\n\t\t\t\t\tif (user.isAdmin) return <Component />;\n\t\t\t\t\talert('접근할 수 없는 페이지 입니다.');\n\t\t\t\t\tlocation.href = '/';\n\t\t\t}\n\t\t} else {\n\t\t\t// 로그인되지않음\n\t\t\tconsole.log('로그인을 해주세요.');\n\n\t\t\tif (isLogined === 1) {\n\t\t\t\talert('로그인을 해주세요.');\n\t\t\t\tlocation.href = '/login';\n\t\t\t} else {\n\t\t\t\treturn <Component />;\n\t\t\t}\n\t\t}\n\n\t\treturn <Component />;\n\t};\n\n\t// axios\n\t// \t.get(`${SERVER}/api/auth/check`, { withCredentials: true })\n\t// \t.then(res => {\n\t// \t\tconst user: User = res.data.user;\n\t// \t\tif (res.data.success) {\n\t// \t\t\tconsole.log('로그인되어있습니다.');\n\t// \t\t\tif (isLogined === 2) {\n\t// \t\t\t\talert('이미 로그인되어있습니다.');\n\t// \t\t\t\tlocation.href = '/';\n\t// \t\t\t}\n\t// \t\t\tswitch (grade) {\n\t// \t\t\t\t// 아무나\n\t// \t\t\t\tcase 0:\n\t// \t\t\t\t\treturn Component;\n\t// \t\t\t\t// 호스트\n\t// \t\t\t\tcase 1:\n\t// \t\t\t\t\tif (user.isHost) return Component;\n\t// \t\t\t\t\talert('접근할 수 없는 페이지 입니다.');\n\t// \t\t\t\t\tlocation.href = '/';\n\t// \t\t\t\t// 관리자\n\t// \t\t\t\tcase 2:\n\t// \t\t\t\t\tif (user.isAdmin) return Component;\n\t// \t\t\t\t\talert('접근할 수 없는 페이지 입니다.');\n\t// \t\t\t\t\tlocation.href = '/';\n\t// \t\t\t}\n\t// \t\t} else {\n\t// \t\t\t// 로그인되지않음\n\t// \t\t\tconsole.log('로그인을 해주세요.');\n\t// \t\t\tconsole.log(res.data.message, '이것은 에러');\n\n\t// \t\t\tif (isLogined === 1) {\n\t// \t\t\t\talert('로그인을 해주세요.');\n\t// \t\t\t\tlocation.href = '/login';\n\t// \t\t\t} else {\n\t// \t\t\t\treturn Component;\n\t// \t\t\t}\n\t// \t\t}\n\t// \t});\n\n\t// return Component;\n};\n\nexport default withAuth;\n"]},"metadata":{},"sourceType":"module"}