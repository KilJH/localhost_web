{"ast":null,"code":"import _defineProperty from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/client/components/reuse/Maps.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport GoogleMap from 'google-map-react';\nimport { MAP_KEY } from '../../utils/keys';\nimport HostIcon from '../host/HostIcon';\nimport { Place } from '@material-ui/icons';\n\nvar Marker = function Marker(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Place, {\n      fontSize: \"large\",\n      style: {\n        color: '#5197d5'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, _this);\n};\n\n_c = Marker;\n\nvar Maps = function Maps(props) {\n  _s();\n\n  var lat = props.lat,\n      lng = props.lng,\n      width = props.width,\n      height = props.height,\n      nearbyHosts = props.nearbyHosts;\n  var defaults = {\n    center: {\n      lat: lat || 37.4870684,\n      lng: lng || 126.8257101\n    },\n    zoom: 15\n  };\n\n  var _useState = useState(true),\n      markerShow = _useState[0],\n      setMarkerShow = _useState[1];\n\n  var onZoom = function onZoom(zoom) {\n    zoom > 12 ? setMarkerShow(true) : setMarkerShow(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: width || '100%',\n      height: height || '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, _objectSpread(_objectSpread({\n      bootstrapURLKeys: {\n        key: MAP_KEY\n      }\n    }, defaults), {}, {\n      onZoomAnimationStart: onZoom,\n      onZoomAnimationEnd: onZoom,\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        lat: lat,\n        lng: lng\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, _this), nearbyHosts === null || nearbyHosts === void 0 ? void 0 : nearbyHosts.map(function (host) {\n        return /*#__PURE__*/_jsxDEV(HostIcon, {\n          host: host,\n          lat: host.place.geometry.location.lat,\n          lng: host.place.geometry.location.lng,\n          isShow: markerShow\n        }, host.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, _this);\n      })]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(Maps, \"Hz3HjZMQ9YZhHQELCrSdJDBBhHQ=\");\n\n_c2 = Maps;\nexport default Maps;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Marker\");\n$RefreshReg$(_c2, \"Maps\");","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/client/components/reuse/Maps.tsx"],"names":["React","useState","GoogleMap","MAP_KEY","HostIcon","Place","Marker","props","color","Maps","lat","lng","width","height","nearbyHosts","defaults","center","zoom","markerShow","setMarkerShow","onZoom","key","map","host","place","geometry","location","id"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AAEA,SAASC,KAAT,QAAsB,oBAAtB;;AAWA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAyC;AACvD,sBACC;AAAA,2BAIC,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,OAAhB;AAAwB,MAAA,KAAK,EAAE;AAAEC,QAAAA,KAAK,EAAE;AAAT;AAA/B;AAAA;AAAA;AAAA;AAAA;AAJD;AAAA;AAAA;AAAA;AAAA,WADD;AAQA,CATD;;KAAMF,M;;AAWN,IAAMG,IAAI,GAAG,SAAPA,IAAO,CAACF,KAAD,EAAkB;AAAA;;AAAA,MACtBG,GADsB,GACmBH,KADnB,CACtBG,GADsB;AAAA,MACjBC,GADiB,GACmBJ,KADnB,CACjBI,GADiB;AAAA,MACZC,KADY,GACmBL,KADnB,CACZK,KADY;AAAA,MACLC,MADK,GACmBN,KADnB,CACLM,MADK;AAAA,MACGC,WADH,GACmBP,KADnB,CACGO,WADH;AAE9B,MAAMC,QAAQ,GAAG;AAChBC,IAAAA,MAAM,EAAE;AACPN,MAAAA,GAAG,EAAEA,GAAG,IAAI,UADL;AAEPC,MAAAA,GAAG,EAAEA,GAAG,IAAI;AAFL,KADQ;AAKhBM,IAAAA,IAAI,EAAE;AALU,GAAjB;;AAF8B,kBASMhB,QAAQ,CAAC,IAAD,CATd;AAAA,MASvBiB,UATuB;AAAA,MASXC,aATW;;AAU9B,MAAMC,MAAM,GAAG,SAATA,MAAS,CAAAH,IAAI,EAAI;AACtBA,IAAAA,IAAI,GAAG,EAAP,GAAYE,aAAa,CAAC,IAAD,CAAzB,GAAkCA,aAAa,CAAC,KAAD,CAA/C;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,KAAK,EAAE;AAAEP,MAAAA,KAAK,EAAEA,KAAK,IAAI,MAAlB;AAA0BC,MAAAA,MAAM,EAAEA,MAAM,IAAI;AAA5C,KAAZ;AAAA,2BACC,QAAC,SAAD;AACC,MAAA,gBAAgB,EAAE;AAAEQ,QAAAA,GAAG,EAAElB;AAAP;AADnB,OAEKY,QAFL;AAGC,MAAA,oBAAoB,EAAEK,MAHvB;AAIC,MAAA,kBAAkB,EAAEA,MAJrB;AAAA,8BAOC,QAAC,MAAD;AAAQ,QAAA,GAAG,EAAEV,GAAb;AAAkB,QAAA,GAAG,EAAEC;AAAvB;AAAA;AAAA;AAAA;AAAA,eAPD,EAUEG,WAVF,aAUEA,WAVF,uBAUEA,WAAW,CAAEQ,GAAb,CAAiB,UAAAC,IAAI;AAAA,4BACrB,QAAC,QAAD;AACC,UAAA,IAAI,EAAEA,IADP;AAEC,UAAA,GAAG,EAAEA,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6BhB,GAFnC;AAGC,UAAA,GAAG,EAAEa,IAAI,CAACC,KAAL,CAAWC,QAAX,CAAoBC,QAApB,CAA6Bf,GAHnC;AAIC,UAAA,MAAM,EAAEO;AAJT,WAKMK,IAAI,CAACI,EALX;AAAA;AAAA;AAAA;AAAA,iBADqB;AAAA,OAArB,CAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,WADD;AAwBA,CAtCD;;GAAMlB,I;;MAAAA,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport GoogleMap from 'google-map-react';\nimport { MAP_KEY } from '../../utils/keys';\nimport PersonIcon from '@material-ui/icons/Person';\nimport HostIcon from '../host/HostIcon';\nimport { Host } from '../../interfaces';\nimport { Place } from '@material-ui/icons';\nimport { Fade } from '@material-ui/core';\n\ninterface Props {\n\twidth?: string;\n\theight?: string;\n\tlat: number;\n\tlng: number;\n\tnearbyHosts?: Host[];\n}\n\nconst Marker = (props: { lat: number; lng: number }) => {\n\treturn (\n\t\t<div>\n\t\t\t{/* hover\n\t\t\t\ttheme에 따른 색상 변화\n\t\t\t*/}\n\t\t\t<Place fontSize='large' style={{ color: '#5197d5' }} />\n\t\t</div>\n\t);\n};\n\nconst Maps = (props: Props) => {\n\tconst { lat, lng, width, height, nearbyHosts } = props;\n\tconst defaults = {\n\t\tcenter: {\n\t\t\tlat: lat || 37.4870684,\n\t\t\tlng: lng || 126.8257101,\n\t\t},\n\t\tzoom: 15,\n\t};\n\tconst [markerShow, setMarkerShow] = useState(true);\n\tconst onZoom = zoom => {\n\t\tzoom > 12 ? setMarkerShow(true) : setMarkerShow(false);\n\t};\n\n\treturn (\n\t\t<div style={{ width: width || '100%', height: height || '100%' }}>\n\t\t\t<GoogleMap\n\t\t\t\tbootstrapURLKeys={{ key: MAP_KEY }}\n\t\t\t\t{...defaults}\n\t\t\t\tonZoomAnimationStart={onZoom}\n\t\t\t\tonZoomAnimationEnd={onZoom}\n\t\t\t>\n\t\t\t\t{/* 해당 위치 */}\n\t\t\t\t<Marker lat={lat} lng={lng} />\n\n\t\t\t\t{/* 호스트 위치 */}\n\t\t\t\t{nearbyHosts?.map(host => (\n\t\t\t\t\t<HostIcon\n\t\t\t\t\t\thost={host}\n\t\t\t\t\t\tlat={host.place.geometry.location.lat}\n\t\t\t\t\t\tlng={host.place.geometry.location.lng}\n\t\t\t\t\t\tisShow={markerShow}\n\t\t\t\t\t\tkey={host.id}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</GoogleMap>\n\t\t</div>\n\t);\n};\n\nexport default Maps;\n"]},"metadata":{},"sourceType":"module"}