{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/client/components/reuse/Input.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nconst StyledInput = styled.input.withConfig({\n  displayName: \"Input__StyledInput\",\n  componentId: \"sc-1jxsbly-0\"\n})([\"font-size:0.8em;border-radius:\", \";border:\", \";border-bottom:\", \";text-align:\", \";padding:\", \";margin:\", \";width:\", \";height:2.5rem;box-sizing:border-box;transition:all 0.2s ease;&:hover{border-width:2px;border-color:rgba(0,0,0,0.87);}&:focus{border-width:2px;border-color:rgb(81,151,213);}&[type='number']::-webkit-inner-spin-button,&[type='number']::-webkit-outer-spin-button{-webkit-appearance:none;margin:0;}\"], props => props.borderRadius || 0, props => props.border || 'none', props => props.border ? '' : '1px solid rgba(0, 0, 0, 0.42)', props => props.textAlign || 'center', props => props.padding || '0.75rem', props => props.margin || '', props => props.width || '8em');\n\nconst Input = props => {\n  const {\n    width,\n    border,\n    borderRadius,\n    textAlign,\n    type,\n    padding,\n    margin\n  } = props,\n        other = _objectWithoutProperties(props, [\"width\", \"border\", \"borderRadius\", \"textAlign\", \"type\", \"padding\", \"margin\"]);\n\n  return /*#__PURE__*/_jsxDEV(StyledInput, _objectSpread({\n    width: width,\n    border: border,\n    borderRadius: borderRadius,\n    textAlign: textAlign,\n    type: type,\n    padding: padding,\n    margin: margin\n  }, other), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 3\n  }, this);\n};\n\nexport default Input;","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/client/components/reuse/Input.tsx"],"names":["React","styled","StyledInput","input","props","borderRadius","border","textAlign","padding","margin","width","Input","type","other"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAWA,MAAMC,WAAW,GAAGD,MAAM,CAACE,KAAV;AAAA;AAAA;AAAA,qaAECC,KAAK,IAAIA,KAAK,CAACC,YAAN,IAAsB,CAFhC,EAGND,KAAK,IAAIA,KAAK,CAACE,MAAN,IAAgB,MAHnB,EAICF,KAAK,IACrBA,KAAK,CAACE,MAAN,GAAe,EAAf,GAAoB,+BALL,EAMFF,KAAK,IAAIA,KAAK,CAACG,SAAN,IAAmB,QAN1B,EAOLH,KAAK,IAAIA,KAAK,CAACI,OAAN,IAAiB,SAPrB,EAQNJ,KAAK,IAAIA,KAAK,CAACK,MAAN,IAAgB,EARnB,EASPL,KAAK,IAAIA,KAAK,CAACM,KAAN,IAAe,KATjB,CAAjB;;AA+BA,MAAMC,KAAK,GAAIP,KAAD,IAAuB;AACpC,QAAM;AACLM,IAAAA,KADK;AAELJ,IAAAA,MAFK;AAGLD,IAAAA,YAHK;AAILE,IAAAA,SAJK;AAKLK,IAAAA,IALK;AAMLJ,IAAAA,OANK;AAOLC,IAAAA;AAPK,MASFL,KATJ;AAAA,QAQIS,KARJ,4BASIT,KATJ;;AAUA,sBACC,QAAC,WAAD;AACC,IAAA,KAAK,EAAEM,KADR;AAEC,IAAA,MAAM,EAAEJ,MAFT;AAGC,IAAA,YAAY,EAAED,YAHf;AAIC,IAAA,SAAS,EAAEE,SAJZ;AAKC,IAAA,IAAI,EAAEK,IALP;AAMC,IAAA,OAAO,EAAEJ,OANV;AAOC,IAAA,MAAM,EAAEC;AAPT,KAQKI,KARL;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CAvBD;;AAyBA,eAAeF,KAAf","sourcesContent":["import React, { InputHTMLAttributes } from 'react';\nimport styled from 'styled-components';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n\twidth?: string;\n\tborder?: string;\n\tborderRadius?: string;\n\ttextAlign?: string;\n\tpadding?: string;\n\tmargin?: string;\n}\n\nconst StyledInput = styled.input<InputProps>`\n\tfont-size: 0.8em;\n\tborder-radius: ${props => props.borderRadius || 0};\n\tborder: ${props => props.border || 'none'};\n\tborder-bottom: ${props =>\n\t\tprops.border ? '' : '1px solid rgba(0, 0, 0, 0.42)'};\n\ttext-align: ${props => props.textAlign || 'center'};\n\tpadding: ${props => props.padding || '0.75rem'};\n\tmargin: ${props => props.margin || ''};\n\twidth: ${props => props.width || '8em'};\n\theight: 2.5rem;\n\tbox-sizing: border-box;\n\n\ttransition: all 0.2s ease;\n\n\t&:hover {\n\t\tborder-width: 2px;\n\t\tborder-color: rgba(0, 0, 0, 0.87);\n\t}\n\t&:focus {\n\t\tborder-width: 2px;\n\t\tborder-color: rgb(81, 151, 213);\n\t}\n\n\t&[type='number']::-webkit-inner-spin-button,\n\t&[type='number']::-webkit-outer-spin-button {\n\t\t-webkit-appearance: none;\n\t\tmargin: 0;\n\t}\n`;\n\nconst Input = (props: InputProps) => {\n\tconst {\n\t\twidth,\n\t\tborder,\n\t\tborderRadius,\n\t\ttextAlign,\n\t\ttype,\n\t\tpadding,\n\t\tmargin,\n\t\t...other\n\t} = props;\n\treturn (\n\t\t<StyledInput\n\t\t\twidth={width}\n\t\t\tborder={border}\n\t\t\tborderRadius={borderRadius}\n\t\t\ttextAlign={textAlign}\n\t\t\ttype={type}\n\t\t\tpadding={padding}\n\t\t\tmargin={margin}\n\t\t\t{...other}\n\t\t/>\n\t);\n};\n\nexport default Input;\n"]},"metadata":{},"sourceType":"module"}