{"ast":null,"code":"import _defineProperty from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/client/pages/_app.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport GlobalStyle from '../styles/reset';\nimport App from 'next/app';\nimport axios from 'axios';\nimport SERVER from '../utils/url';\nimport { ScrollProvider } from '../context/scroll';\nimport { UserContextProvider } from '../context/user';\nimport { useAsync } from 'react-async';\n\nvar getCurrentUser = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(SERVER, \"/api/auth/check\"), {\n              withCredentials: true\n            });\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getCurrentUser() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar _app = function _app(props) {\n  _s();\n\n  var Component = props.Component,\n      title = props.title,\n      others = _objectWithoutProperties(props, [\"Component\", \"title\"]); // const setUser = useContext(UserSetterContext);\n  // setUser(props.loginProps.user);\n  // console.log('실행...');\n  // const [user, setUser] = useState(props.loginProps.user);\n\n\n  var _useState = useState(),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useAsync = useAsync({\n    promiseFn: getCurrentUser\n  }),\n      data = _useAsync.data,\n      error = _useAsync.error,\n      isLoading = _useAsync.isLoading;\n\n  if (isLoading) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  if (error) return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  if (!data) return null;\n  setUser(data.user);\n  console.log('현재유저는', user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UserContextProvider, {\n      value: {\n        user: user,\n        setUser: setUser\n      },\n      children: /*#__PURE__*/_jsxDEV(ScrollProvider, {\n        children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, others), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 3\n  }, _this);\n}; // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\n_s(_app, \"6qOaDtil0dFJLXLdrRPwnM8FstE=\", false, function () {\n  return [useAsync];\n});\n\n_app.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(appContext) {\n    var appProps;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return App.getInitialProps(appContext);\n\n          case 2:\n            appProps = _context2.sent;\n            return _context2.abrupt(\"return\", _objectSpread({}, appProps));\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default _app;","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/client/pages/_app.tsx"],"names":["React","useState","GlobalStyle","App","axios","SERVER","ScrollProvider","UserContextProvider","useAsync","getCurrentUser","get","withCredentials","res","data","_app","props","Component","title","others","user","setUser","promiseFn","error","isLoading","console","log","getInitialProps","appContext","appProps"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgC,UAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA,SAASC,QAAT,QAAyB,aAAzB;;AAEA,IAAMC,cAAc;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJL,KAAK,CAACM,GAAN,WAAaL,MAAb,sBAAsC;AACvDM,cAAAA,eAAe,EAAE;AADsC,aAAtC,CADI;;AAAA;AAChBC,YAAAA,GADgB;AAAA,6CAIfA,GAAG,CAACC,IAJW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAdJ,cAAc;AAAA;AAAA;AAAA,GAApB;;AAOA,IAAMK,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAgB;AAAA;;AAAA,MACpBC,SADoB,GACYD,KADZ,CACpBC,SADoB;AAAA,MACTC,KADS,GACYF,KADZ,CACTE,KADS;AAAA,MACCC,MADD,4BACYH,KADZ,2BAG5B;AACA;AACA;AAEA;;;AAP4B,kBAQJd,QAAQ,EARJ;AAAA,MAQrBkB,IARqB;AAAA,MAQfC,OARe;;AAAA,kBAUOZ,QAAQ,CAAC;AAC3Ca,IAAAA,SAAS,EAAEZ;AADgC,GAAD,CAVf;AAAA,MAUpBI,IAVoB,aAUpBA,IAVoB;AAAA,MAUdS,KAVc,aAUdA,KAVc;AAAA,MAUPC,SAVO,aAUPA,SAVO;;AAc5B,MAAIA,SAAJ,EAAe,oBAAO,qCAAP;AACf,MAAID,KAAJ,EAAW,oBAAO,qCAAP;AACX,MAAI,CAACT,IAAL,EAAW,OAAO,IAAP;AAEXO,EAAAA,OAAO,CAACP,IAAI,CAACM,IAAN,CAAP;AAEAK,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,IAArB;AAEA,sBACC;AAAA,2BAEC,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAI,EAAJA,IAAF;AAAQC,QAAAA,OAAO,EAAPA;AAAR,OAA5B;AAAA,6BACC,QAAC,cAAD;AAAA,gCACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,iBADD,eAEC,QAAC,SAAD,oBAAeF,MAAf;AAAA;AAAA;AAAA;AAAA,iBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,WADD;AAWA,CAjCD,C,CAmCA;AACA;AACA;AACA;AACA;;;GAvCMJ,I;UAU8BN,Q;;;AA8BpCM,IAAI,CAACY,eAAL;AAAA,uEAAuB,kBAAOC,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAECxB,GAAG,CAACuB,eAAJ,CAAoBC,UAApB,CAFD;;AAAA;AAEhBC,YAAAA,QAFgB;AAAA,gEAiBVA,QAjBU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAoBA,eAAed,IAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport GlobalStyle from '../styles/reset';\nimport App, { AppContext } from 'next/app';\nimport axios from 'axios';\nimport SERVER from '../utils/url';\nimport { ScrollProvider } from '../context/scroll';\nimport { UserContextProvider } from '../context/user';\nimport { useAsync } from 'react-async';\n\nconst getCurrentUser = async () => {\n\tconst res = await axios.get(`${SERVER}/api/auth/check`, {\n\t\twithCredentials: true,\n\t});\n\treturn res.data;\n};\n\nconst _app = (props: any) => {\n\tconst { Component, title, ...others } = props;\n\n\t// const setUser = useContext(UserSetterContext);\n\t// setUser(props.loginProps.user);\n\t// console.log('실행...');\n\n\t// const [user, setUser] = useState(props.loginProps.user);\n\tconst [user, setUser] = useState();\n\n\tconst { data, error, isLoading } = useAsync({\n\t\tpromiseFn: getCurrentUser,\n\t});\n\n\tif (isLoading) return <></>;\n\tif (error) return <></>;\n\tif (!data) return null;\n\n\tsetUser(data.user);\n\n\tconsole.log('현재유저는', user);\n\n\treturn (\n\t\t<div>\n\t\t\t{/* 전역 css */}\n\t\t\t<UserContextProvider value={{ user, setUser }}>\n\t\t\t\t<ScrollProvider>\n\t\t\t\t\t<GlobalStyle />\n\t\t\t\t\t<Component {...others} />\n\t\t\t\t</ScrollProvider>\n\t\t\t</UserContextProvider>\n\t\t</div>\n\t);\n};\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n_app.getInitialProps = async (appContext: any) => {\n\t// calls page's `getInitialProps` and fills `appProps.pageProps`\n\tconst appProps = await App.getInitialProps(appContext);\n\t// const { ctx } = appContext;\n\t// const cookie = ctx.isServer ? ctx.req.cookies : '';\n\t// let loginProps = {};\n\t// // SSR\n\t// if (ctx.isServer && cookie) {\n\t// \tconsole.log('서버에서 동작합니다.');\n\t// \taxios.defaults.headers.Cookie = cookie;\n\t// }\n\t// const res = await axios.get(`${SERVER}/api/auth/check`, {\n\t// \twithCredentials: true,\n\t// });\n\t// const isLogined = res.data.success;\n\t// const user = res.data.user || {};\n\t// loginProps = { isLogined, user };\n\treturn { ...appProps };\n};\n\nexport default _app;\n"]},"metadata":{},"sourceType":"module"}