{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\hby84\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\210428\\\\localhost_web\\\\client\\\\pages\\\\users\\\\mypage\\\\host.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Layout from '../../../components/main/Layout';\nimport axios from 'axios';\nimport SERVER from '../../../utils/url';\nimport MyHostLog from '../../../components/user/Mypage/MyHostLog';\n\nconst mypage = ({\n  pageProps\n}) => {\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    title: \"\\uB9C8\\uC774\\uD398\\uC774\\uC9C0 | localhost\",\n    children: /*#__PURE__*/_jsxDEV(MyHostLog, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 3\n  }, this);\n};\n\nexport const getServerSideProps = async ctx => {\n  // 로그인 유저 id 가져오기\n  const res = await axios.post(`${SERVER}/api/auth/check`, {\n    token: ctx.req.cookies.token\n  }, {\n    withCredentials: true\n  });\n  const userId = res.data.user.id;\n  const resApp = await axios.post(`${SERVER}/api/host/application/list`, {\n    userId\n  });\n  const resPreApp = await axios.post(`${SERVER}/api/host/application/history`, {\n    userId\n  });\n  const applications = resApp.data.applicant;\n  const preApplications = resPreApp.data.previousApplicant;\n  return {\n    props: {\n      applications,\n      preApplications\n    }\n  };\n};\nexport default mypage;","map":{"version":3,"sources":["C:/Users/hby84/OneDrive/바탕 화면/210428/localhost_web/client/pages/users/mypage/host.tsx"],"names":["React","Layout","axios","SERVER","MyHostLog","mypage","pageProps","getServerSideProps","ctx","res","post","token","req","cookies","withCredentials","userId","data","user","id","resApp","resPreApp","applications","applicant","preApplications","previousApplicant","props"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iCAAnB;AAQA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,oBAAnB;AACA,OAAOC,SAAP,MAAsB,2CAAtB;;AAWA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA0B;AACxC,sBACC,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,4CAAd;AAAA,2BACC,QAAC,SAAD,oBAAeA,SAAf;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAKA,CAND;;AAQA,OAAO,MAAMC,kBAAsC,GAAG,MAAMC,GAAN,IAAa;AAClE;AACA,QAAMC,GAAG,GAAG,MAAMP,KAAK,CAACQ,IAAN,CAChB,GAAEP,MAAO,iBADO,EAEjB;AAAEQ,IAAAA,KAAK,EAAEH,GAAG,CAACI,GAAJ,CAAQC,OAAR,CAAgBF;AAAzB,GAFiB,EAGjB;AAAEG,IAAAA,eAAe,EAAE;AAAnB,GAHiB,CAAlB;AAMA,QAAMC,MAAM,GAAGN,GAAG,CAACO,IAAJ,CAASC,IAAT,CAAcC,EAA7B;AAEA,QAAMC,MAAM,GAAG,MAAMjB,KAAK,CAACQ,IAAN,CAAY,GAAEP,MAAO,4BAArB,EAAkD;AACtEY,IAAAA;AADsE,GAAlD,CAArB;AAGA,QAAMK,SAAS,GAAG,MAAMlB,KAAK,CAACQ,IAAN,CAAY,GAAEP,MAAO,+BAArB,EAAqD;AAC5EY,IAAAA;AAD4E,GAArD,CAAxB;AAIA,QAAMM,YAAY,GAAGF,MAAM,CAACH,IAAP,CAAYM,SAAjC;AACA,QAAMC,eAAe,GAAGH,SAAS,CAACJ,IAAV,CAAeQ,iBAAvC;AAEA,SAAO;AAAEC,IAAAA,KAAK,EAAE;AAAEJ,MAAAA,YAAF;AAAgBE,MAAAA;AAAhB;AAAT,GAAP;AACA,CArBM;AAuBP,eAAelB,MAAf","sourcesContent":["import React from 'react';\r\nimport Layout from '../../../components/main/Layout';\r\nimport Mypage from '../../../components/user/Mypage/Mypage';\r\nimport {\r\n\tApplication,\r\n\tPreviousApplication,\r\n\tUser,\r\n} from '../../../interfaces/index';\r\nimport { GetServerSideProps } from 'next';\r\nimport axios from 'axios';\r\nimport SERVER from '../../../utils/url';\r\nimport MyHostLog from '../../../components/user/Mypage/MyHostLog';\r\n\r\ninterface Props {\r\n\tpageProps: {\r\n\t\t// 호스트에 관한 기록들\r\n\t\t// 현재 요청한 호스트\r\n\t\tapplications?: Application[];\r\n\t\tpreApplications?: PreviousApplication[];\r\n\t};\r\n}\r\n\r\nconst mypage = ({ pageProps }: Props) => {\r\n\treturn (\r\n\t\t<Layout title='마이페이지 | localhost'>\r\n\t\t\t<MyHostLog {...pageProps} />\r\n\t\t</Layout>\r\n\t);\r\n};\r\n\r\nexport const getServerSideProps: GetServerSideProps = async ctx => {\r\n\t// 로그인 유저 id 가져오기\r\n\tconst res = await axios.post(\r\n\t\t`${SERVER}/api/auth/check`,\r\n\t\t{ token: ctx.req.cookies.token },\r\n\t\t{ withCredentials: true },\r\n\t);\r\n\r\n\tconst userId = res.data.user.id;\r\n\r\n\tconst resApp = await axios.post(`${SERVER}/api/host/application/list`, {\r\n\t\tuserId,\r\n\t});\r\n\tconst resPreApp = await axios.post(`${SERVER}/api/host/application/history`, {\r\n\t\tuserId,\r\n\t});\r\n\r\n\tconst applications = resApp.data.applicant;\r\n\tconst preApplications = resPreApp.data.previousApplicant;\r\n\r\n\treturn { props: { applications, preApplications } };\r\n};\r\n\r\nexport default mypage;\r\n"]},"metadata":{},"sourceType":"module"}