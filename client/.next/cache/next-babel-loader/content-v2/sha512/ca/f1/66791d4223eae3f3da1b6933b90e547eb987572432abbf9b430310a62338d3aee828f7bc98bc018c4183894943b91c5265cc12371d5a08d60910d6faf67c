{"ast":null,"code":"import _regeneratorRuntime from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/client/pages/_app.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport GlobalStyle from '../styles/reset';\nimport App from 'next/app';\nimport axios from 'axios';\nimport SERVER from '../utils/url';\nimport { ScrollProvider } from '../context/scroll';\nimport { UserContextProvider } from '../context/user';\n\nvar _app = function _app(props) {\n  _s();\n\n  var Component = props.Component,\n      title = props.title,\n      others = _objectWithoutProperties(props, [\"Component\", \"title\"]); // const setUser = useContext(UserSetterContext);\n  // setUser(props.loginProps.user);\n  // console.log('실행...');\n\n\n  var _useState = useState(props.loginProps.user),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UserContextProvider, {\n      value: {\n        user: user,\n        setUser: setUser\n      },\n      children: /*#__PURE__*/_jsxDEV(ScrollProvider, {\n        children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, others), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, _this);\n}; // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\n_s(_app, \"gtL1xqUfBEPfWHJBibaMizc8TgM=\");\n\n_app.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(appContext) {\n    var appProps, ctx, cookie, loginProps, res, isLogined, user, _res, _isLogined, _user;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return App.getInitialProps(appContext);\n\n          case 2:\n            appProps = _context.sent;\n            ctx = appContext.ctx;\n            cookie = ctx.isServer ? ctx.req.cookies : '';\n            loginProps = {}; // SSR\n\n            if (!(ctx.isServer && cookie)) {\n              _context.next = 16;\n              break;\n            }\n\n            axios.defaults.headers.Cookie = cookie;\n            _context.next = 10;\n            return axios.get(\"\".concat(SERVER, \"/api/auth/check\"), {\n              withCredentials: true\n            });\n\n          case 10:\n            res = _context.sent;\n            isLogined = res.data.success;\n            user = res.data.user || {};\n            loginProps = {\n              isLogined: isLogined,\n              user: user\n            };\n            _context.next = 23;\n            break;\n\n          case 16:\n            _context.next = 18;\n            return axios.get(\"\".concat(SERVER, \"/api/auth/check\"), {\n              withCredentials: true\n            });\n\n          case 18:\n            _res = _context.sent;\n            console.log(_res.data, '입니다');\n            _isLogined = _res.data.success;\n            _user = _res.data.user || {};\n            loginProps = {\n              isLogined: _isLogined,\n              user: _user\n            };\n\n          case 23:\n            return _context.abrupt(\"return\", _objectSpread(_objectSpread({}, appProps), {}, {\n              loginProps: loginProps\n            }));\n\n          case 24:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default _app;","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/client/pages/_app.tsx"],"names":["React","useState","GlobalStyle","App","axios","SERVER","ScrollProvider","UserContextProvider","_app","props","Component","title","others","loginProps","user","setUser","getInitialProps","appContext","appProps","ctx","cookie","isServer","req","cookies","defaults","headers","Cookie","get","withCredentials","res","isLogined","data","success","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport GlobalStyle from '../styles/reset';\nimport App, { AppContext } from 'next/app';\nimport axios from 'axios';\nimport SERVER from '../utils/url';\nimport { ScrollProvider } from '../context/scroll';\nimport { UserContextProvider, UserSetterContext } from '../context/user';\n\nconst _app = (props: any) => {\n\tconst { Component, title, ...others } = props;\n\n\t// const setUser = useContext(UserSetterContext);\n\t// setUser(props.loginProps.user);\n\t// console.log('실행...');\n\n\tconst [user, setUser] = useState(props.loginProps.user);\n\n\treturn (\n\t\t<div>\n\t\t\t{/* 전역 css */}\n\t\t\t<UserContextProvider value={{ user, setUser }}>\n\t\t\t\t<ScrollProvider>\n\t\t\t\t\t<GlobalStyle />\n\t\t\t\t\t<Component {...others} />\n\t\t\t\t</ScrollProvider>\n\t\t\t</UserContextProvider>\n\t\t</div>\n\t);\n};\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n_app.getInitialProps = async (appContext: any) => {\n\t// calls page's `getInitialProps` and fills `appProps.pageProps`\n\tconst appProps = await App.getInitialProps(appContext);\n\tconst { ctx } = appContext;\n\tconst cookie = ctx.isServer ? ctx.req.cookies : '';\n\tlet loginProps = {};\n\t// SSR\n\tif (ctx.isServer && cookie) {\n\t\taxios.defaults.headers.Cookie = cookie;\n\t\tconst res = await axios.get(`${SERVER}/api/auth/check`, {\n\t\t\twithCredentials: true,\n\t\t});\n\t\tconst isLogined = res.data.success;\n\t\tconst user = res.data.user || {};\n\t\tloginProps = { isLogined, user };\n\t} else {\n\t\tconst res = await axios.get(`${SERVER}/api/auth/check`, {\n\t\t\twithCredentials: true,\n\t\t});\n\t\tconsole.log(res.data, '입니다');\n\t\tconst isLogined = res.data.success;\n\t\tconst user = res.data.user || {};\n\t\tloginProps = { isLogined, user };\n\t}\n\treturn { ...appProps, loginProps };\n};\n\nexport default _app;\n"]},"metadata":{},"sourceType":"module"}