{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/client/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { useState } from 'react';\nimport GlobalStyle from '../styles/reset';\nimport App from 'next/app';\nimport axios from 'axios';\nimport SERVER from '../utils/url';\nimport { ScrollProvider } from '../context/scroll';\nimport { UserContextProvider } from '../context/user';\n\nconst _app = props => {\n  const {\n    Component,\n    title\n  } = props,\n        others = _objectWithoutProperties(props, [\"Component\", \"title\"]); // const setUser = useContext(UserSetterContext);\n  // setUser(props.loginProps.user);\n  // console.log('실행...');\n\n\n  const {\n    0: user,\n    1: setUser\n  } = useState(props.loginProps.user);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(UserContextProvider, {\n      value: {\n        user,\n        setUser\n      },\n      children: /*#__PURE__*/_jsxDEV(ScrollProvider, {\n        children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, others), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n}; // Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n\n\n_app.getInitialProps = async appContext => {\n  // calls page's `getInitialProps` and fills `appProps.pageProps`\n  console.log(appContext, '입니다');\n  const appProps = await App.getInitialProps(appContext);\n  const {\n    ctx\n  } = appContext;\n  const cookie = ctx.isServer ? ctx.req.cookies.token : ''; // console.log('되냐되냐', ctx.req);\n\n  if (ctx.isServer && cookie) {\n    const token = appContext.ctx.req.cookies.token || '';\n    const res = await axios.post(`${SERVER}/api/auth/check`, {\n      token\n    });\n    const isLogined = res.data.success;\n    const user = res.data.user || {};\n    const loginProps = {\n      isLogined,\n      user\n    };\n    return _objectSpread(_objectSpread({}, appProps), {}, {\n      loginProps\n    });\n  }\n\n  return _objectSpread(_objectSpread({}, appProps), {}, {\n    loginProps: {\n      isLogined: false,\n      user: {}\n    }\n  });\n};\n\nexport default _app;","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/client/pages/_app.tsx"],"names":["React","useState","GlobalStyle","App","axios","SERVER","ScrollProvider","UserContextProvider","_app","props","Component","title","others","user","setUser","loginProps","getInitialProps","appContext","console","log","appProps","ctx","cookie","isServer","req","cookies","token","res","post","isLogined","data","success"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,GAAP,MAAgC,UAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,cAAT,QAA+B,mBAA/B;AACA,SAASC,mBAAT,QAAuD,iBAAvD;;AAGA,MAAMC,IAAI,GAAIC,KAAD,IAAgB;AAC5B,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,MAAkCF,KAAxC;AAAA,QAA6BG,MAA7B,4BAAwCH,KAAxC,0BAD4B,CAG5B;AACA;AACA;;;AAEA,QAAM;AAAA,OAACI,IAAD;AAAA,OAAOC;AAAP,MAAkBb,QAAQ,CAACQ,KAAK,CAACM,UAAN,CAAiBF,IAAlB,CAAhC;AAEA,sBACC;AAAA,2BAEC,QAAC,mBAAD;AAAqB,MAAA,KAAK,EAAE;AAAEA,QAAAA,IAAF;AAAQC,QAAAA;AAAR,OAA5B;AAAA,6BACC,QAAC,cAAD;AAAA,gCACC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC,QAAC,SAAD,oBAAeF,MAAf;AAAA;AAAA;AAAA;AAAA,gBAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AAFD;AAAA;AAAA;AAAA;AAAA,UADD;AAWA,CApBD,C,CAsBA;AACA;AACA;AACA;AACA;;;AACAJ,IAAI,CAACQ,eAAL,GAAuB,MAAOC,UAAP,IAA2B;AACjD;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,UAAZ,EAAwB,KAAxB;AACA,QAAMG,QAAQ,GAAG,MAAMjB,GAAG,CAACa,eAAJ,CAAoBC,UAApB,CAAvB;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAUJ,UAAhB;AACA,QAAMK,MAAM,GAAGD,GAAG,CAACE,QAAJ,GAAeF,GAAG,CAACG,GAAJ,CAAQC,OAAR,CAAgBC,KAA/B,GAAuC,EAAtD,CALiD,CAMjD;;AACA,MAAIL,GAAG,CAACE,QAAJ,IAAgBD,MAApB,EAA4B;AAC3B,UAAMI,KAAK,GAAGT,UAAU,CAACI,GAAX,CAAeG,GAAf,CAAmBC,OAAnB,CAA2BC,KAA3B,IAAoC,EAAlD;AACA,UAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,IAAN,CAAY,GAAEvB,MAAO,iBAArB,EAAuC;AACxDqB,MAAAA;AADwD,KAAvC,CAAlB;AAGA,UAAMG,SAAS,GAAGF,GAAG,CAACG,IAAJ,CAASC,OAA3B;AACA,UAAMlB,IAAI,GAAGc,GAAG,CAACG,IAAJ,CAASjB,IAAT,IAAiB,EAA9B;AACA,UAAME,UAAU,GAAG;AAAEc,MAAAA,SAAF;AAAahB,MAAAA;AAAb,KAAnB;AAEA,2CAAYO,QAAZ;AAAsBL,MAAAA;AAAtB;AACA;;AACD,yCAAYK,QAAZ;AAAsBL,IAAAA,UAAU,EAAE;AAAEc,MAAAA,SAAS,EAAE,KAAb;AAAoBhB,MAAAA,IAAI,EAAE;AAA1B;AAAlC;AACA,CAnBD;;AAqBA,eAAeL,IAAf","sourcesContent":["import React, { useContext, useState } from 'react';\nimport GlobalStyle from '../styles/reset';\nimport App, { AppContext } from 'next/app';\nimport axios from 'axios';\nimport SERVER from '../utils/url';\nimport { ScrollProvider } from '../context/scroll';\nimport { UserContextProvider, UserSetterContext } from '../context/user';\nimport { NextPageContext } from 'next';\n\nconst _app = (props: any) => {\n\tconst { Component, title, ...others } = props;\n\n\t// const setUser = useContext(UserSetterContext);\n\t// setUser(props.loginProps.user);\n\t// console.log('실행...');\n\n\tconst [user, setUser] = useState(props.loginProps.user);\n\n\treturn (\n\t\t<div>\n\t\t\t{/* 전역 css */}\n\t\t\t<UserContextProvider value={{ user, setUser }}>\n\t\t\t\t<ScrollProvider>\n\t\t\t\t\t<GlobalStyle />\n\t\t\t\t\t<Component {...others} />\n\t\t\t\t</ScrollProvider>\n\t\t\t</UserContextProvider>\n\t\t</div>\n\t);\n};\n\n// Only uncomment this method if you have blocking data requirements for\n// every single page in your application. This disables the ability to\n// perform automatic static optimization, causing every page in your app to\n// be server-side rendered.\n//\n_app.getInitialProps = async (appContext: any) => {\n\t// calls page's `getInitialProps` and fills `appProps.pageProps`\n\tconsole.log(appContext, '입니다');\n\tconst appProps = await App.getInitialProps(appContext);\n\tconst { ctx } = appContext;\n\tconst cookie = ctx.isServer ? ctx.req.cookies.token : '';\n\t// console.log('되냐되냐', ctx.req);\n\tif (ctx.isServer && cookie) {\n\t\tconst token = appContext.ctx.req.cookies.token || '';\n\t\tconst res = await axios.post(`${SERVER}/api/auth/check`, {\n\t\t\ttoken,\n\t\t});\n\t\tconst isLogined = res.data.success;\n\t\tconst user = res.data.user || {};\n\t\tconst loginProps = { isLogined, user };\n\n\t\treturn { ...appProps, loginProps };\n\t}\n\treturn { ...appProps, loginProps: { isLogined: false, user: {} } };\n};\n\nexport default _app;\n"]},"metadata":{},"sourceType":"module"}