{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { createContext, useState } from 'react';\nexport var UserStateContext = /*#__PURE__*/createContext({\n  id: 0,\n  email: '',\n  password: '',\n  name: '',\n  nickname: '',\n  phone: '',\n  address: '',\n  photo: ''\n}); // type UserSetter = Dispatch<SetStateAction<User>>;\n\nexport var UserSetterContext = /*#__PURE__*/createContext(function (user) {\n  console.log('setUser() is default');\n});\nexport var UserContextProvider = function UserContextProvider(_ref) {\n  var value = _ref.value,\n      children = _ref.children;\n\n  var _useState = useState({\n    id: 0,\n    email: '',\n    password: '',\n    name: '',\n    nickname: '',\n    phone: '',\n    address: '',\n    photo: ''\n  }),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  return /*#__PURE__*/_jsx(UserSetterContext.Provider, {\n    value: value.setUser || setUser,\n    children: /*#__PURE__*/_jsx(UserStateContext.Provider, {\n      value: value.user || user,\n      children: children\n    })\n  });\n}; // export const useUserState = () => {\n// \tconst state = useContext(UserStateContext);\n// \treturn state;\n// };\n// export const useUserDispatch = () => {\n// \tconst dispatch = useContext(UserSetterContext);\n// \t// if (!dispatch) throw new Error('UserProvider not found');\n// \treturn dispatch;\n// };","map":null,"metadata":{},"sourceType":"module"}