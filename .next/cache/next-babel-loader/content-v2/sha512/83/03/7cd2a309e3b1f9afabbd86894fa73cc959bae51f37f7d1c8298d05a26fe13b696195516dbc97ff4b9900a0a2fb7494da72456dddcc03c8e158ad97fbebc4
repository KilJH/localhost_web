{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport React from 'react';\nimport MyHostingPage from '../../components/host/MyHosting/MyHostingPage';\nimport Layout from '../../components/main/Layout';\nimport SERVER from '../../client/utils/url';\n\nconst myhosting = ({\n  pageProps\n}) => {\n  return /*#__PURE__*/_jsx(\"div\", {\n    children: /*#__PURE__*/_jsx(Layout, {\n      title: \"\\uB098\\uC758 \\uD638\\uC2A4\\uD305 | localhost\",\n      children: /*#__PURE__*/_jsx(MyHostingPage, _objectSpread({}, pageProps))\n    })\n  });\n};\n\nexport const getServerSideProps = async ctx => {\n  // 로그인 유저 id 가져오기\n  let waitingApplicant = [];\n  let matchedApplicant = [];\n  const cookie = ctx.req.headers.cookie || '';\n  const res = await axios.get(`${SERVER}/api/auth/check`, {\n    withCredentials: true,\n    headers: {\n      cookie\n    }\n  });\n  const userId = res.data.user.id;\n  const resLoadHost = await axios.post(`${SERVER}/api/host/load`, {\n    id: userId\n  });\n  const host = resLoadHost.data.host;\n  const applyList = await (await axios.post(`${SERVER}/api/host/application/list`, {\n    hostUserId: userId\n  })).data.applicant;\n  applyList.map(value => {\n    if (value.status === 0) waitingApplicant.push(value);\n  });\n  const previousApplicant = await (await axios.post(`${SERVER}/api/host/application/history`, {\n    hostUserId: host.id\n  })).data.previousApplicant;\n  const applicationList = await (await axios.post(`${SERVER}/api/host/application/list`, {\n    hostUserId: host.id\n  })).data.applicant;\n  applicationList.map(value => {\n    if (value.status === 1) matchedApplicant.push(value);\n  });\n  return {\n    props: {\n      host,\n      waitingApplicant,\n      previousApplicant,\n      matchedApplicant\n    }\n  };\n};\nexport default myhosting;","map":null,"metadata":{},"sourceType":"module"}