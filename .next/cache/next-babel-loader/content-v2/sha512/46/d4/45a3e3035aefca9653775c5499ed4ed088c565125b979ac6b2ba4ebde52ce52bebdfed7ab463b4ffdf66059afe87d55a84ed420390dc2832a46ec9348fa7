{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _defineProperty from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Maps from '../../components/reuse/Maps';\nimport SearchPlace from '../../components/search/SearchPlace';\nimport styled from 'styled-components';\nimport SERVER from '../../client/utils/url';\nimport HostList from '../../components/host/HostList';\nvar Container = styled.div.withConfig({\n  displayName: \"HostMain__Container\",\n  componentId: \"hiwegl-0\"\n})([\"display:flex;width:100%;height:85vh;& > div{padding:0.5rem;}& > div:first-child{flex:1;min-width:350px;display:flex;flex-direction:column;}& > div:nth-child(2){flex:2;}\"]);\n\nvar HostMain = function HostMain() {\n  var _useState = useState({\n    name: '',\n    formatted_address: '',\n    geometry: {\n      location: {\n        lat: 0,\n        lng: 0\n      }\n    }\n  }),\n      place = _useState[0],\n      setPlace = _useState[1];\n\n  var _useState2 = useState({\n    lat: 0,\n    lng: 0\n  }),\n      coord = _useState2[0],\n      setCoord = _useState2[1];\n\n  var _useState3 = useState([]),\n      nearbyHosts = _useState3[0],\n      setNearbyHosts = _useState3[1];\n\n  var _useState4 = useState([]),\n      filteredHosts = _useState4[0],\n      setFilteredHosts = _useState4[1]; // 지역이 바뀌면 위,경도 가져오기\n\n\n  useEffect(function () {\n    setCoord(_objectSpread({}, place.geometry.location));\n  }, [place]); // 첫 로딩 때 GPS 읽어서 현재위치로\n\n  useEffect(function () {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setCoord({\n          lat: position.coords.latitude || 0,\n          lng: position.coords.longitude || 0\n        });\n      });\n    }\n  }, []); // 위,경도 바뀌면 api요청 보내서 근처 호스트 목록 가져오기\n\n  useEffect(function () {\n    axios.post(\"\".concat(SERVER, \"/api/host/nearByList\"), {\n      latitude: coord.lat,\n      longitude: coord.lng\n    }).then(function (res) {\n      setNearbyHosts(res.data.nearbyhosts);\n    });\n  }, [coord]);\n  useEffect(function () {\n    setFilteredHosts(nearbyHosts);\n  }, [nearbyHosts]);\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      children: [/*#__PURE__*/_jsx(SearchPlace, {\n        setPlace: setPlace\n      }), /*#__PURE__*/_jsx(HostList, {\n        origin: nearbyHosts,\n        setOrigin: setNearbyHosts,\n        nearbyHosts: filteredHosts,\n        setNearbyHosts: setFilteredHosts,\n        coord: coord\n      })]\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: /*#__PURE__*/_jsx(Maps, _objectSpread(_objectSpread({}, coord), {}, {\n        nearbyHosts: nearbyHosts\n      }))\n    })]\n  });\n};\n\nexport default HostMain;","map":null,"metadata":{},"sourceType":"module"}