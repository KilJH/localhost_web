{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _defineProperty from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/components/host/HostMain.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Maps from '../../components/reuse/Maps';\nimport SearchPlace from '../../components/search/SearchPlace';\nimport styled from 'styled-components';\nimport SERVER from '../../client/utils/url';\nimport HostList from '../../components/host/HostList';\nvar Container = styled.div.withConfig({\n  displayName: \"HostMain__Container\",\n  componentId: \"hiwegl-0\"\n})([\"display:flex;width:100%;height:85vh;& > div{padding:0.5rem;}& > div:first-child{flex:1;min-width:350px;display:flex;flex-direction:column;}& > div:nth-child(2){flex:2;}\"]);\n_c = Container;\n\nvar HostMain = function HostMain() {\n  _s();\n\n  var _useState = useState({\n    name: '',\n    formatted_address: '',\n    geometry: {\n      location: {\n        lat: 0,\n        lng: 0\n      }\n    }\n  }),\n      place = _useState[0],\n      setPlace = _useState[1];\n\n  var _useState2 = useState({\n    lat: 0,\n    lng: 0\n  }),\n      coord = _useState2[0],\n      setCoord = _useState2[1];\n\n  var _useState3 = useState([]),\n      nearbyHosts = _useState3[0],\n      setNearbyHosts = _useState3[1];\n\n  var _useState4 = useState([]),\n      filteredHosts = _useState4[0],\n      setFilteredHosts = _useState4[1]; // 지역이 바뀌면 위,경도 가져오기\n\n\n  useEffect(function () {\n    setCoord(_objectSpread({}, place.geometry.location));\n  }, [place]); // 첫 로딩 때 GPS 읽어서 현재위치로\n\n  useEffect(function () {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setCoord({\n          lat: position.coords.latitude || 0,\n          lng: position.coords.longitude || 0\n        });\n      });\n    }\n  }, []); // 위,경도 바뀌면 api요청 보내서 근처 호스트 목록 가져오기\n\n  useEffect(function () {\n    axios.post(\"\".concat(SERVER, \"/api/host/nearByList\"), {\n      latitude: coord.lat,\n      longitude: coord.lng\n    }).then(function (res) {\n      setNearbyHosts(res.data.nearbyhosts);\n    });\n  }, [coord]);\n  useEffect(function () {\n    setFilteredHosts(nearbyHosts);\n  }, [nearbyHosts]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchPlace, {\n        setPlace: setPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(HostList, {\n        origin: nearbyHosts,\n        setOrigin: setNearbyHosts,\n        nearbyHosts: filteredHosts,\n        setNearbyHosts: setFilteredHosts,\n        coord: coord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Maps, _objectSpread(_objectSpread({}, coord), {}, {\n        nearbyHosts: nearbyHosts\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(HostMain, \"k+PhdH2Szixzhw6stxxfAzOnR/A=\");\n\n_c2 = HostMain;\nexport default HostMain;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"HostMain\");","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/components/host/HostMain.tsx"],"names":["axios","React","useEffect","useState","Maps","SearchPlace","styled","SERVER","HostList","Container","div","HostMain","name","formatted_address","geometry","location","lat","lng","place","setPlace","coord","setCoord","nearbyHosts","setNearbyHosts","filteredHosts","setFilteredHosts","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","post","then","res","data","nearbyhosts"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nimport Maps from '../../components/reuse/Maps';\nimport SearchPlace from '../../components/search/SearchPlace';\nimport { Host, Place } from '../../interfaces';\nimport styled from 'styled-components';\nimport SERVER from '../../client/utils/url';\nimport HostList from '../../components/host/HostList';\n\nconst Container = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\theight: 85vh;\n\t& > div {\n\t\tpadding: 0.5rem;\n\t}\n\n\t& > div:first-child {\n\t\tflex: 1;\n\t\tmin-width: 350px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t}\n\t& > div:nth-child(2) {\n\t\tflex: 2;\n\t}\n`;\n\nconst HostMain = () => {\n\tconst [place, setPlace] = useState<Place>({\n\t\tname: '',\n\t\tformatted_address: '',\n\t\tgeometry: { location: { lat: 0, lng: 0 } },\n\t});\n\n\tconst [coord, setCoord] = useState({ lat: 0, lng: 0 });\n\tconst [nearbyHosts, setNearbyHosts] = useState<Host[]>([]);\n\tconst [filteredHosts, setFilteredHosts] = useState<Host[]>([]);\n\n\t// 지역이 바뀌면 위,경도 가져오기\n\tuseEffect(() => {\n\t\tsetCoord({ ...place!.geometry!.location });\n\t}, [place]);\n\n\t// 첫 로딩 때 GPS 읽어서 현재위치로\n\tuseEffect(() => {\n\t\tif (navigator.geolocation) {\n\t\t\tnavigator.geolocation.getCurrentPosition(position => {\n\t\t\t\tsetCoord({\n\t\t\t\t\tlat: position.coords.latitude || 0,\n\t\t\t\t\tlng: position.coords.longitude || 0,\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}, []);\n\n\t// 위,경도 바뀌면 api요청 보내서 근처 호스트 목록 가져오기\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.post(`${SERVER}/api/host/nearByList`, {\n\t\t\t\tlatitude: coord.lat,\n\t\t\t\tlongitude: coord.lng,\n\t\t\t})\n\t\t\t.then(res => {\n\t\t\t\tsetNearbyHosts(res.data.nearbyhosts);\n\t\t\t});\n\t}, [coord]);\n\n\tuseEffect(() => {\n\t\tsetFilteredHosts(nearbyHosts);\n\t}, [nearbyHosts]);\n\n\treturn (\n\t\t<Container>\n\t\t\t<div>\n\t\t\t\t<SearchPlace setPlace={setPlace} />\n\t\t\t\t<HostList\n\t\t\t\t\torigin={nearbyHosts}\n\t\t\t\t\tsetOrigin={setNearbyHosts}\n\t\t\t\t\tnearbyHosts={filteredHosts}\n\t\t\t\t\tsetNearbyHosts={setFilteredHosts}\n\t\t\t\t\tcoord={coord}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div>\n\t\t\t\t<Maps {...coord} nearbyHosts={nearbyHosts} />\n\t\t\t</div>\n\t\t</Container>\n\t);\n};\n\nexport default HostMain;\n"]},"metadata":{},"sourceType":"module"}