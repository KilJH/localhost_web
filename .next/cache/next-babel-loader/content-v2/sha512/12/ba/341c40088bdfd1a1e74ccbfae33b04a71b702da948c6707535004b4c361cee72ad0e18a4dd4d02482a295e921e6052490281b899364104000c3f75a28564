{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from 'axios';\nimport React from 'react';\nimport HostDetail from '../../components/host/HostDetail';\nimport Layout from '../../components/main/Layout';\nimport SERVER from '../../client/utils/url';\n\nconst HostDetailPage = ({\n  pageProps\n}) => {\n  return /*#__PURE__*/_jsx(Layout, {\n    title: \"\\uD638\\uC2A4\\uD2B8 \\uC815\\uBCF4 | localhost\",\n    children: /*#__PURE__*/_jsx(HostDetail, _objectSpread({}, pageProps))\n  });\n};\n\nexport default HostDetailPage;\nexport const getServerSideProps = async ({\n  params\n}) => {\n  try {\n    const id = params === null || params === void 0 ? void 0 : params.id;\n    const res = await axios.post(`${SERVER}/api/host/load`, {\n      id\n    });\n    const host = res.data.host;\n    const reviews = res.data.reviews;\n    return {\n      props: {\n        host,\n        reviews\n      }\n    };\n  } catch (err) {\n    return {\n      props: {\n        errors: err.message\n      }\n    };\n  }\n};","map":null,"metadata":{},"sourceType":"module"}