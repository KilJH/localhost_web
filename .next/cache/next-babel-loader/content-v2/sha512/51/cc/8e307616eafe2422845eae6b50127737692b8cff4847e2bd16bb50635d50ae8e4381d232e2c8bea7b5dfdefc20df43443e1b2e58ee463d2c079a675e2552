{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from 'axios';\nimport React from 'react';\nimport SERVER from '../../../client/utils/url';\nimport { useAsync } from 'react-async';\nimport Loading from '../../reuse/Loading'; // isLogined\n// 0: 아무나 볼 수 있음, 1: 로그인한 회원만 볼 수 있음, 2: 게스트만 볼 수 있음\n// grade\n// 0: 아무나 볼 수 있음, 2: 호스트회원만 볼 수 있음, 3: 관리자회원만 볼 수 있음\n\nvar getAuth = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"\".concat(SERVER, \"/api/auth/check\"), {\n              withCredentials: true\n            });\n\n          case 2:\n            res = _context.sent;\n            return _context.abrupt(\"return\", res.data);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getAuth() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar withAuth = function withAuth(isLogined, grade) {\n  return function (Component) {\n    return function () {\n      var _useAsync = useAsync({\n        promiseFn: getAuth\n      }),\n          data = _useAsync.data,\n          isLoading = _useAsync.isLoading,\n          error = _useAsync.error;\n\n      if (isLoading) return /*#__PURE__*/_jsx(Loading, {});\n      if (error) return /*#__PURE__*/_jsx(\"div\", {\n        children: \"\\uC5D0\\uB7EC!\"\n      });\n      if (!data) return null;\n      var user = data.user;\n\n      if (data.success) {\n        console.log('로그인되어있습니다.');\n\n        if (isLogined === 2) {\n          alert('이미 로그인되어있습니다.');\n          location.href = '/';\n          return /*#__PURE__*/_jsx(Loading, {});\n        }\n\n        switch (grade) {\n          // 아무나\n          case 0:\n            return /*#__PURE__*/_jsx(Component, {});\n          // 호스트\n\n          case 1:\n            if (user.isHost) return /*#__PURE__*/_jsx(Component, {});\n            alert('권한이 없습니다. 호스트 신청을 해주세요:D');\n            location.href = '/';\n            break;\n          // 관리자\n\n          case 2:\n            if (user.isAdmin) return /*#__PURE__*/_jsx(Component, {});\n            alert('접근할 수 없는 페이지 입니다.');\n            location.href = '/';\n            break;\n        }\n      } else {\n        // 로그인되지않음\n        console.log('로그인을 해주세요.');\n\n        if (isLogined === 1) {\n          alert('로그인을 해주세요.');\n          location.href = '/login';\n        } else {\n          return /*#__PURE__*/_jsx(Component, {});\n        }\n      }\n\n      return /*#__PURE__*/_jsx(Loading, {});\n    };\n  };\n};\n\nexport default withAuth;","map":null,"metadata":{},"sourceType":"module"}