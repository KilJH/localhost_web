{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport Layout from '../../components/main/Layout';\nimport ListDetail from '../../components/user/ListDetail';\n\nvar StaticPropsDetail = function StaticPropsDetail(_ref) {\n  var pageProps = _ref.pageProps;\n  // if (pageProps.errors) {\n  // \treturn (\n  // \t\t<Layout title='Error | PlanBee🐝'>\n  // \t\t\t<p>\n  // \t\t\t\t<span style={{ color: 'red' }}>Error:</span> {pageProps.errors}\n  // \t\t\t</p>\n  // \t\t</Layout>\n  // \t);\n  // }\n  return /*#__PURE__*/_jsx(Layout, {\n    title: \"\".concat(pageProps.item ? pageProps.item.name : 'User Detail', \" | localhost\"),\n    children: pageProps.item && /*#__PURE__*/_jsx(ListDetail, {\n      item: pageProps.item,\n      isFollowed: pageProps.isFollowed\n    })\n  });\n};\n\nexport var __N_SSP = true;\nexport default StaticPropsDetail; // export const getStaticPaths: GetStaticPaths = async () => {\n// \t// Get the paths we want to pre-render based on users\n// \tconst paths = await (\n// \t\tawait axios.get(`${SERVER}/api/user/list`)\n// \t).data.users.map((user) => ({\n// \t\tparams: { id: user.id.toString() },\n// \t}));\n// \t// We'll pre-render only these paths at build time.\n// \t// { fallback: false } means other routes should 404.\n// \treturn { paths, fallback: false };\n// };\n// This function gets called at build time on server-side.\n// It won't be called on client-side, so you can even do\n// direct database queries.","map":null,"metadata":{},"sourceType":"module"}