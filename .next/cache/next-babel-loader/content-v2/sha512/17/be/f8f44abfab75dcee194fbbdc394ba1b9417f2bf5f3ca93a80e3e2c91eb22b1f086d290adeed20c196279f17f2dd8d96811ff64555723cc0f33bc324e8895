{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _regeneratorRuntime from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/zknock/Develop/localhost_web/node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useState } from 'react';\nimport Search from '../search/Search';\nimport BoardItem from './BoardItem';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport SERVER from '../../client/utils/url';\nimport Pagination from '../main/Pagination';\nimport { useAsync } from 'react-async';\nimport Loading from '../reuse/Loading';\nvar BoardContainer = styled.div.withConfig({\n  displayName: \"BoardList__BoardContainer\",\n  componentId: \"sc-1v1ysib-0\"\n})([\"margin:1rem 0;& > *{margin:0.25rem 0;}\"]);\n\nvar getBoards = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(ctx) {\n    var page, res;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            page = ctx.page;\n            _context.prev = 1;\n            _context.next = 4;\n            return axios.get(\"/api/board/list?page=\".concat(page));\n\n          case 4:\n            res = _context.sent;\n            console.log(res.data);\n            return _context.abrupt(\"return\", res.data);\n\n          case 9:\n            _context.prev = 9;\n            _context.t0 = _context[\"catch\"](1);\n            return _context.abrupt(\"return\", console.log(_context.t0));\n\n          case 12:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[1, 9]]);\n  }));\n\n  return function getBoards(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar BoardList = function BoardList() {\n  // const { boards } = props;\n  var _useState = useState([]),\n      boards = _useState[0],\n      setBoards = _useState[1];\n\n  var _useState2 = useState(1),\n      pageState = _useState2[0],\n      setPageState = _useState2[1]; // const onSubmit = async (e: React.FormEvent, type, item) => {\n  // \te.preventDefault();\n  // \tconst res = await axios.post(`${SERVER}/api/board/search`, {\n  // \t\ttype: type,\n  // \t\titem: item,\n  // \t});\n  // \tsetBoards(res.data.list);\n  // };\n\n\n  var onClickPage = function onClickPage(idx) {\n    setPageState(idx);\n  };\n\n  var _useAsync = useAsync({\n    promiseFn: getBoards,\n    page: pageState\n  }),\n      data = _useAsync.data,\n      error = _useAsync.error,\n      isLoading = _useAsync.isLoading;\n\n  useEffect(function () {\n    var _data$pagedBoards;\n\n    setBoards((_data$pagedBoards = data === null || data === void 0 ? void 0 : data.pagedBoards) !== null && _data$pagedBoards !== void 0 ? _data$pagedBoards : []);\n  }, [data]);\n  useEffect(function () {\n    console.log(pageState);\n    axios.get(\"/api/board/list?page=\".concat(pageState)).then(function (res) {\n      setBoards(res.data.pagedBoards);\n    });\n  }, [pageState]);\n  if (isLoading) return /*#__PURE__*/_jsx(Loading, {});\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: '0.5em',\n      color: '#e74c3c'\n    },\n    children: \"!!!\\uC5D0\\uB7EC!!!\"\n  });\n  if (!data) return null;\n  return /*#__PURE__*/_jsxs(BoardContainer, {\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n    }), /*#__PURE__*/_jsx(Search, {\n      options: ['title', 'description', 'nickname'],\n      label: ['제목', '내용', '작성자'],\n      onSubmit: function onSubmit() {}\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: boards.map(function (board) {\n        return /*#__PURE__*/_jsx(BoardItem, {\n          board: board\n        }, board.id);\n      })\n    }), /*#__PURE__*/_jsx(Link, {\n      href: \"/board/write\",\n      children: /*#__PURE__*/_jsx(\"button\", {\n        children: \"\\uC791\\uC131\"\n      })\n    }), /*#__PURE__*/_jsx(Pagination, {\n      currentIdx: data.page,\n      lastIdx: data.lastIdx,\n      url: \"/board\",\n      api: \"\".concat(SERVER, \"/api/board/list\") // setItems={setBoards}\n      ,\n      onClick: onClickPage\n    })]\n  });\n};\n\nexport default BoardList;","map":null,"metadata":{},"sourceType":"module"}