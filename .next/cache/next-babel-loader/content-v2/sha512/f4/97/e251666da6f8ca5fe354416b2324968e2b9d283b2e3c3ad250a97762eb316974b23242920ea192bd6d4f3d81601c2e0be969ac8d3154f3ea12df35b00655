{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/zknock/Develop/localhost_web/components/board/BoardList.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport Search from '../search/Search';\nimport BoardItem from './BoardItem';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport SERVER from '../../client/utils/url';\nimport Pagination from '../main/Pagination';\nimport { useAsync } from 'react-async';\nimport Loading from '../reuse/Loading';\nconst BoardContainer = styled.div.withConfig({\n  displayName: \"BoardList__BoardContainer\",\n  componentId: \"sc-1v1ysib-0\"\n})([\"margin:1rem 0;& > *{margin:0.25rem 0;}\"]);\n\nconst getBoards = async ctx => {\n  const {\n    page\n  } = ctx;\n\n  try {\n    const res = await axios.get(`/api/board/list?page=${page}`);\n    console.log(res.data);\n    return res.data;\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nconst BoardList = () => {\n  // const { boards } = props;\n  const {\n    0: boards,\n    1: setBoards\n  } = useState([]);\n  const {\n    0: pageState,\n    1: setPageState\n  } = useState(1); // const onSubmit = async (e: React.FormEvent, type, item) => {\n  // \te.preventDefault();\n  // \tconst res = await axios.post(`${SERVER}/api/board/search`, {\n  // \t\ttype: type,\n  // \t\titem: item,\n  // \t});\n  // \tsetBoards(res.data.list);\n  // };\n\n  const onClickPage = idx => {\n    setPageState(idx);\n  };\n\n  const {\n    data,\n    error,\n    isLoading\n  } = useAsync({\n    promiseFn: getBoards,\n    page: pageState\n  });\n  useEffect(() => {\n    var _data$pagedBoards;\n\n    setBoards((_data$pagedBoards = data === null || data === void 0 ? void 0 : data.pagedBoards) !== null && _data$pagedBoards !== void 0 ? _data$pagedBoards : []);\n  }, [data]);\n  useEffect(() => {\n    console.log(pageState);\n    axios.get(`/api/board/list?page=${pageState}`).then(res => {\n      setBoards(res.data.pagedBoards);\n    });\n  }, [pageState]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 24\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontSize: '0.5em',\n      color: '#e74c3c'\n    },\n    children: \"!!!\\uC5D0\\uB7EC!!!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 4\n  }, this);\n  if (!data) return null;\n  return /*#__PURE__*/_jsxDEV(BoardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      options: ['title', 'description', 'nickname'],\n      label: ['제목', '내용', '작성자'],\n      onSubmit: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(BoardItem, {\n        board: board\n      }, board.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      href: \"/board/write\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uC791\\uC131\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      currentIdx: data.page,\n      lastIdx: data.lastIdx,\n      url: \"/board\",\n      api: `${SERVER}/api/board/list` // setItems={setBoards}\n      ,\n      onClick: onClickPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n};\n\nexport default BoardList;","map":{"version":3,"sources":["/Users/zknock/Develop/localhost_web/components/board/BoardList.tsx"],"names":["React","useEffect","useState","Search","BoardItem","styled","Link","axios","SERVER","Pagination","useAsync","Loading","BoardContainer","div","getBoards","ctx","page","res","get","console","log","data","err","BoardList","boards","setBoards","pageState","setPageState","onClickPage","idx","error","isLoading","promiseFn","pagedBoards","then","fontSize","color","map","board","id","lastIdx"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,MAAMC,cAAc,GAAGP,MAAM,CAACQ,GAAV;AAAA;AAAA;AAAA,8CAApB;;AAOA,MAAMC,SAAS,GAAG,MAAMC,GAAN,IAAa;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAWD,GAAjB;;AACA,MAAI;AACH,UAAME,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAW,wBAAuBF,IAAK,EAAvC,CAAlB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACI,IAAhB;AACA,WAAOJ,GAAG,CAACI,IAAX;AACA,GAJD,CAIE,OAAOC,GAAP,EAAY;AACb,WAAOH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAAP;AACA;AACD,CATD;;AAWA,MAAMC,SAAS,GAAG,MAAM;AACvB;AACA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBvB,QAAQ,CAAU,EAAV,CAApC;AACA,QAAM;AAAA,OAACwB,SAAD;AAAA,OAAYC;AAAZ,MAA4BzB,QAAQ,CAAC,CAAD,CAA1C,CAHuB,CAKvB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA,QAAM0B,WAAW,GAAGC,GAAG,IAAI;AAC1BF,IAAAA,YAAY,CAACE,GAAD,CAAZ;AACA,GAFD;;AAIA,QAAM;AAAER,IAAAA,IAAF;AAAQS,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA6BrB,QAAQ,CAAC;AAC3CsB,IAAAA,SAAS,EAAElB,SADgC;AAE3CE,IAAAA,IAAI,EAAEU;AAFqC,GAAD,CAA3C;AAKAzB,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACfwB,IAAAA,SAAS,sBAACJ,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEY,WAAP,iEAAsB,EAAtB,CAAT;AACA,GAFQ,EAEN,CAACZ,IAAD,CAFM,CAAT;AAIApB,EAAAA,SAAS,CAAC,MAAM;AACfkB,IAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACAnB,IAAAA,KAAK,CAACW,GAAN,CAAW,wBAAuBQ,SAAU,EAA5C,EAA+CQ,IAA/C,CAAoDjB,GAAG,IAAI;AAC1DQ,MAAAA,SAAS,CAACR,GAAG,CAACI,IAAJ,CAASY,WAAV,CAAT;AACA,KAFD;AAGA,GALQ,EAKN,CAACP,SAAD,CALM,CAAT;AAOA,MAAIK,SAAJ,EAAe,oBAAO,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AACf,MAAID,KAAJ,EACC,oBACC;AAAK,IAAA,KAAK,EAAE;AAAEK,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,KAAK,EAAE;AAA5B,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAGD,MAAI,CAACf,IAAL,EAAW,OAAO,IAAP;AAEX,sBACC,QAAC,cAAD;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAGC,QAAC,MAAD;AACC,MAAA,OAAO,EAAE,CAAC,OAAD,EAAU,aAAV,EAAyB,UAAzB,CADV;AAEC,MAAA,KAAK,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,KAAb,CAFR;AAGC,MAAA,QAAQ,EAAE,MAAM,CAAE;AAHnB;AAAA;AAAA;AAAA;AAAA,YAHD,eAQC;AAAA,gBACEG,MAAM,CAACa,GAAP,CAAWC,KAAK,iBAChB,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEA;AAAlB,SAA8BA,KAAK,CAACC,EAApC;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YARD,eAcC,QAAC,IAAD;AAAM,MAAA,IAAI,EAAC,cAAX;AAAA,6BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YAdD,eAkBC,QAAC,UAAD;AACC,MAAA,UAAU,EAAElB,IAAI,CAACL,IADlB;AAEC,MAAA,OAAO,EAAEK,IAAI,CAACmB,OAFf;AAGC,MAAA,GAAG,EAAC,QAHL;AAIC,MAAA,GAAG,EAAG,GAAEhC,MAAO,iBAJhB,CAKC;AALD;AAMC,MAAA,OAAO,EAAEoB;AANV;AAAA;AAAA;AAAA;AAAA,YAlBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA6BA,CAvED;;AAyEA,eAAeL,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Search from '../search/Search';\nimport BoardItem from './BoardItem';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport { Board } from '../../interfaces';\nimport axios from 'axios';\nimport SERVER from '../../client/utils/url';\nimport Pagination from '../main/Pagination';\nimport { useAsync } from 'react-async';\nimport Loading from '../reuse/Loading';\n\nconst BoardContainer = styled.div`\n\tmargin: 1rem 0;\n\t& > * {\n\t\tmargin: 0.25rem 0;\n\t}\n`;\n\nconst getBoards = async ctx => {\n\tconst { page } = ctx;\n\ttry {\n\t\tconst res = await axios.get(`/api/board/list?page=${page}`);\n\t\tconsole.log(res.data);\n\t\treturn res.data;\n\t} catch (err) {\n\t\treturn console.log(err);\n\t}\n};\n\nconst BoardList = () => {\n\t// const { boards } = props;\n\tconst [boards, setBoards] = useState<Board[]>([]);\n\tconst [pageState, setPageState] = useState(1);\n\n\t// const onSubmit = async (e: React.FormEvent, type, item) => {\n\t// \te.preventDefault();\n\t// \tconst res = await axios.post(`${SERVER}/api/board/search`, {\n\t// \t\ttype: type,\n\t// \t\titem: item,\n\t// \t});\n\n\t// \tsetBoards(res.data.list);\n\t// };\n\n\tconst onClickPage = idx => {\n\t\tsetPageState(idx);\n\t};\n\n\tconst { data, error, isLoading } = useAsync({\n\t\tpromiseFn: getBoards,\n\t\tpage: pageState,\n\t});\n\n\tuseEffect(() => {\n\t\tsetBoards(data?.pagedBoards ?? []);\n\t}, [data]);\n\n\tuseEffect(() => {\n\t\tconsole.log(pageState);\n\t\taxios.get(`/api/board/list?page=${pageState}`).then(res => {\n\t\t\tsetBoards(res.data.pagedBoards);\n\t\t});\n\t}, [pageState]);\n\n\tif (isLoading) return <Loading />;\n\tif (error)\n\t\treturn (\n\t\t\t<div style={{ fontSize: '0.5em', color: '#e74c3c' }}>!!!에러!!!</div>\n\t\t);\n\tif (!data) return null;\n\n\treturn (\n\t\t<BoardContainer>\n\t\t\t<h2>자유게시판</h2>\n\t\t\t{/* 검색 */}\n\t\t\t<Search\n\t\t\t\toptions={['title', 'description', 'nickname']}\n\t\t\t\tlabel={['제목', '내용', '작성자']}\n\t\t\t\tonSubmit={() => {}}\n\t\t\t/>\n\t\t\t<div>\n\t\t\t\t{boards.map(board => (\n\t\t\t\t\t<BoardItem board={board} key={board.id} />\n\t\t\t\t))}\n\t\t\t</div>\n\t\t\t{/* 작성버튼 */}\n\t\t\t<Link href='/board/write'>\n\t\t\t\t<button>작성</button>\n\t\t\t</Link>\n\t\t\t{/* 페이지네이션 */}\n\t\t\t<Pagination\n\t\t\t\tcurrentIdx={data.page!}\n\t\t\t\tlastIdx={data.lastIdx}\n\t\t\t\turl='/board'\n\t\t\t\tapi={`${SERVER}/api/board/list`}\n\t\t\t\t// setItems={setBoards}\n\t\t\t\tonClick={onClickPage}\n\t\t\t/>\n\t\t</BoardContainer>\n\t);\n};\n\nexport default BoardList;\n"]},"metadata":{},"sourceType":"module"}