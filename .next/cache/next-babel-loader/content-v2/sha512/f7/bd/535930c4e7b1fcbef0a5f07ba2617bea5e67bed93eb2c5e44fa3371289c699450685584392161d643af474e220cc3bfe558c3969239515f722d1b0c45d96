{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React from 'react';\nimport StarOutlineRoundedIcon from '@material-ui/icons/StarOutlineRounded';\nimport StarHalfRoundedIcon from '@material-ui/icons/StarHalfRounded';\nimport StarRoundedIcon from '@material-ui/icons/StarRounded';\nimport styled from 'styled-components';\nconst StarDiv = styled.div.withConfig({\n  displayName: \"Rating__StarDiv\",\n  componentId: \"sc-1cwvehd-0\"\n})([\"display:inline-block;& > svg{color:#5197d5;font-size:1.8em !important;}\"]);\n\nconst drawFullStar = rating => {\n  const icons = [];\n\n  for (let i = 0; i < Math.floor(rating); i++) {\n    icons.push( /*#__PURE__*/_jsx(StarRoundedIcon, {}, i));\n  }\n\n  return icons;\n};\n\nconst fillTheSpace = rating => {\n  const icons = [];\n\n  for (let i = 5; i > Math.ceil(rating); i--) {\n    icons.push( /*#__PURE__*/_jsx(StarOutlineRoundedIcon, {}, i));\n  }\n\n  return icons;\n};\n\nconst drawRestStar = rating => {\n  const decimal = rating - Math.floor(rating);\n  if (decimal <= 0) return;else if (decimal < 0.5) return /*#__PURE__*/_jsx(StarOutlineRoundedIcon, {});else return /*#__PURE__*/_jsx(StarHalfRoundedIcon, {});\n};\n\nconst Rating = props => {\n  const {\n    rating,\n    isFilled\n  } = props;\n  return /*#__PURE__*/_jsxs(StarDiv, {\n    children: [rating <= 5 ? drawFullStar(rating) : 'excessed the boundary', rating <= 5 ? drawRestStar(rating) : '', rating <= 5 ? !isFilled || fillTheSpace(rating) : '']\n  });\n};\n\nexport default Rating;","map":null,"metadata":{},"sourceType":"module"}