{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useEffect, useState } from 'react';\nimport Search from '../search/Search';\nimport BoardItem from './BoardItem';\nimport styled from 'styled-components';\nimport Link from 'next/link';\nimport axios from 'axios';\nimport SERVER from '../../client/utils/url';\nimport Pagination from '../main/Pagination';\nimport { useAsync } from 'react-async';\nimport Loading from '../reuse/Loading';\nconst BoardContainer = styled.div.withConfig({\n  displayName: \"BoardList__BoardContainer\",\n  componentId: \"sc-1v1ysib-0\"\n})([\"margin:1rem 0;& > *{margin:0.25rem 0;}\"]);\n\nconst getBoards = async ctx => {\n  const {\n    page\n  } = ctx;\n\n  try {\n    const res = await axios.get(`/api/board/list?page=${page}`);\n    console.log(res.data);\n    return res.data;\n  } catch (err) {\n    return console.log(err);\n  }\n};\n\nconst BoardList = () => {\n  // const { boards } = props;\n  const {\n    0: boards,\n    1: setBoards\n  } = useState([]);\n  const {\n    0: pageState,\n    1: setPageState\n  } = useState(1); // const onSubmit = async (e: React.FormEvent, type, item) => {\n  // \te.preventDefault();\n  // \tconst res = await axios.post(`${SERVER}/api/board/search`, {\n  // \t\ttype: type,\n  // \t\titem: item,\n  // \t});\n  // \tsetBoards(res.data.list);\n  // };\n\n  const onClickPage = idx => {\n    setPageState(idx);\n  };\n\n  const {\n    data,\n    error,\n    isLoading\n  } = useAsync({\n    promiseFn: getBoards,\n    page: pageState\n  });\n  useEffect(() => {\n    var _data$pagedBoards;\n\n    setBoards((_data$pagedBoards = data === null || data === void 0 ? void 0 : data.pagedBoards) !== null && _data$pagedBoards !== void 0 ? _data$pagedBoards : []);\n  }, [data]);\n  useEffect(() => {\n    console.log(pageState);\n    axios.get(`/api/board/list?page=${pageState}`).then(res => {\n      setBoards(res.data.pagedBoards);\n    });\n  }, [pageState]);\n  if (isLoading) return /*#__PURE__*/_jsx(Loading, {});\n  if (error) return /*#__PURE__*/_jsx(\"div\", {\n    style: {\n      fontSize: '0.5em',\n      color: '#e74c3c'\n    },\n    children: \"!!!\\uC5D0\\uB7EC!!!\"\n  });\n  if (!data) return null;\n  return /*#__PURE__*/_jsxs(BoardContainer, {\n    children: [/*#__PURE__*/_jsx(\"h2\", {\n      children: \"\\uC790\\uC720\\uAC8C\\uC2DC\\uD310\"\n    }), /*#__PURE__*/_jsx(Search, {\n      options: ['title', 'description', 'nickname'],\n      label: ['제목', '내용', '작성자'],\n      onSubmit: () => {}\n    }), /*#__PURE__*/_jsx(\"div\", {\n      children: boards.map(board => /*#__PURE__*/_jsx(BoardItem, {\n        board: board\n      }, board.id))\n    }), /*#__PURE__*/_jsx(Link, {\n      href: \"/board/write\",\n      children: /*#__PURE__*/_jsx(\"button\", {\n        children: \"\\uC791\\uC131\"\n      })\n    }), /*#__PURE__*/_jsx(Pagination, {\n      currentIdx: data.page,\n      lastIdx: data.lastIdx,\n      url: \"/board\",\n      api: `${SERVER}/api/board/list` // setItems={setBoards}\n      ,\n      onClick: onClickPage\n    })]\n  });\n};\n\nexport default BoardList;","map":null,"metadata":{},"sourceType":"module"}