{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled from 'styled-components';\nconst StyledInput = styled.input.withConfig({\n  displayName: \"Input__StyledInput\",\n  componentId: \"pu4m14-0\"\n})([\"font-size:0.8em;border-radius:\", \";border:\", \";border-bottom:\", \";text-align:\", \";padding:\", \";margin:\", \";width:\", \";height:2.5rem;box-sizing:border-box;transition:all 0.2s ease;&:hover{border-width:2px;border-color:rgba(0,0,0,0.87);}&:focus{border-width:2px;border-color:rgb(81,151,213);}&[type='number']::-webkit-inner-spin-button,&[type='number']::-webkit-outer-spin-button{-webkit-appearance:none;margin:0;}\"], props => props.borderRadius || 0, props => props.border || 'none', props => props.border ? '' : '1px solid rgba(0, 0, 0, 0.42)', props => props.textAlign || 'center', props => props.padding || '0.75rem', props => props.margin || '', props => props.width || '8em');\n\nconst Input = props => {\n  const {\n    width,\n    border,\n    borderRadius,\n    textAlign,\n    type,\n    padding,\n    margin\n  } = props,\n        other = _objectWithoutProperties(props, [\"width\", \"border\", \"borderRadius\", \"textAlign\", \"type\", \"padding\", \"margin\"]);\n\n  return /*#__PURE__*/_jsx(StyledInput, _objectSpread({\n    width: width,\n    border: border,\n    borderRadius: borderRadius,\n    textAlign: textAlign,\n    type: type,\n    padding: padding,\n    margin: margin\n  }, other));\n};\n\nexport default Input;","map":null,"metadata":{},"sourceType":"module"}